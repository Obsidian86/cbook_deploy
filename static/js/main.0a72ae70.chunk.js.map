{"version":3,"sources":["helper/apiCall.js","actions/userActions.js","actions/accountActions.js","actions/transactionActions.js","actions/index.js","actions/viewActions.js","components/fragments/ui/UserBar.js","components/ChooseUser.js","helper/money.js","components/fragments/AccountCard.js","components/fragments/ui/Load.js","components/Settings.js","components/ChooseAccount.js","components/fragments/TransactionList.js","components/ViewAccount.js","components/Header.js","components/fragments/NewAccountFields.js","components/fragments/NewTransactionsFields.js","helper/date.js","components/Drawer.js","App.js","serviceWorker.js","reducers/defaultState.js","reducers/cBookReducer.js","reducers/reducerActions/user.js","reducers/reducerActions/accounts.js","reducers/reducerActions/transactions.js","reducers/reducerActions/views.js","reducers/index.js","index.js"],"names":["apiCall","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","callParams","URL","callFilter","wrap","_context","prev","next","concat","url","method","headers","content-type","applyAuth","Authorization","localStorage","getItem","body","abrupt","fetch","then","data","json","catch","err","synced","stop","this","_x","apply","arguments","logOut","dispatch","removeItem","type","setLoginUser","userId","payload","setAddAccount","accountInfo","tran","setDeleteAccount","id","setAddTransaction","transactionInfo","setDeleteTransaction","accountId","transId","setSendUpdateTransaction","loginUser","userInfo","JSON","stringify","sent","error","setItem","authToken","createUser","createInfo","_ref2","_callee2","_context2","userAccount","_id","_x2","checkLoggedIn","userActions","deleteUser","_ref3","_callee3","_context3","message","_x3","back","viewAccount","account","page","accountView","toggleDrawer","drawer","setMessage","toggleSettings","addAccount","deleteAccount","loadAccounts","useData","accounts","addTransaction","newTrans","deleteTransaction","setUpdateTransaction","sendUpdateTransaction","style","width","margin","padding","borderBottom","sStyle","paddingBottom","color","iStyle","border","height","borderRadius","transform","paddingTop","marginLeft","marginTop","UserBar","props","react_default","createElement","className","title","ChooseUser","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleForm","e","preventDefault","setState","loginForm","state","handleSubmit","username","document","getElementById","value","password","valErrors","repassword","length","_this2","ui_UserBar","action","onSubmit","htmlFor","onClick","Component","connect","user","convMoney","amount","isNaN","chunks","parseFloat","toFixed","split","newAmount","count","i","reverse","join","AccountCard","name","balance","desc","Load","timer","setInterval","newMessage","clearInterval","backgroundColor","textAlign","Settings","verifyDelAccount","verifyDelUser","ui_Load","ChooseAccount","_this$props","loadState","settings","totalAmount","list","map","fragments_AccountCard","key","components_Settings","TransactionList","transactions","slice","index","toggleOptions","payee","date","cleared","ViewAccount","target","targ","oldTarg","getElementsByClassName","classList","contains","remove","add","fragments_TransactionList","Header","NewAccountFields","step","NewTransactionsFields","updatingTransaction","changeSelVal","clearedFields","depositFields","amountField","upTran","defaultValue","event","setChoice","toString","sign","Date","getMonth","getDate","getFullYear","todayDate","Drawer","accInfo","setDeposit","account_id","transaction_id","transaction","setCleared","val","defineProperty","selectionClass","selection","change","toggle","drawerTitle","fragments_NewAccountFields","fragments_NewTransactionsFields","App","component","components_ChooseAccount","components_ViewAccount","components_ChooseUser","components_Header","components_Drawer","Boolean","window","location","hostname","match","defaultState","cBookreducer","undefined","objectSpread","userReducer","accountReducer","newAcc","assign","toConsumableArray","filter","acc","allAccounts","transReducer","accNum","j","subtractAmount","ac","viewReducer","vAccount","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iTAAaA,EAAO,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAA,OAAAN,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACfL,EADe,6CAAAM,OACoCP,EAAWQ,KAAOR,EAAWQ,KAChFN,EAAa,CACbO,OAAQT,EAAWS,QAAU,MAC7BC,QAAS,CAACC,eAAgB,qBAE3BX,EAAWY,YAAYV,EAAWQ,QAAQG,cAAnB,WAAAN,OAA8CO,aAAaC,QAAQ,eAC1Ff,EAAWgB,OAAOd,EAAWc,KAAOhB,EAAWgB,MAP/BZ,EAAAa,OAAA,SAQZC,MAAMjB,EAAKC,GACjBiB,KAAK,SAAAC,GAAI,OAAIA,EAAKC,SAClBF,KAAK,SAAAC,GAAI,OAAIA,IACbE,MAAM,SAAAC,GACH,MAAO,CAAEC,OAAQ,MAZF,wBAAApB,EAAAqB,SAAA1B,EAAA2B,SAAH,gBAAAC,GAAA,OAAAlC,EAAAmC,MAAAF,KAAAG,YAAA,GCEPC,EAAS,WAClB,OAAO,SAACC,GACJjB,aAAakB,WAAW,aACxBlB,aAAakB,WAAW,QACxBD,EAAS,CAACE,KAAM,kBAWlBC,EAAe,SAACC,GAClB,MAAM,CAAEF,KAAM,aAAcG,QAAS,CAACD,YChBpCE,EAAgB,SAACC,EAAaC,GAAd,MAAwB,CAC1CN,KAAM,cACNG,QAAS,CAACE,cAAaC,UAmBrBC,EAAmB,SAACC,GAAD,MAAS,CAC9BR,KAAM,iBACNG,QAAS,CAACK,QCvBRC,EAAoB,SAACC,GAAD,MAAsB,CAC5CV,KAAM,kBACNG,QAASO,IAoBPC,EAAuB,SAACC,EAAWC,GAAZ,MAAyB,CAClDb,KAAM,qBACNG,QAAS,CAAES,YAAWC,aAwBpBC,EAA2B,SAACR,GAAD,MAAW,CACxCN,KAAM,0BACNG,QAASG,IC/CAS,EHeY,SAACC,GACtB,sBAAAxD,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAOgC,GAAP,IAAAX,EAAA,OAAAxB,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACcd,EAAQ,CACrBiB,OAAQ,OACRD,IAAG,aACHQ,KAAMkC,KAAKC,UAAUF,KAJtB,QACC7B,EADDhB,EAAAgD,MAMMC,MAKLtB,EAAS,CAACE,KAAM,QAASG,QAAShB,EAAKiC,MAAMA,SAJ7CvC,aAAawC,QAAQ,OAAQlC,EAAKe,QAClCrB,aAAawC,QAAQ,YAAalC,EAAKmC,WACvCxB,EAASG,EAAad,EAAKe,UAT5B,wBAAA/B,EAAAqB,SAAA1B,EAAA2B,SAAP,gBAAAC,GAAA,OAAAlC,EAAAmC,MAAAF,KAAAG,YAAA,IGfS2B,EH+Ba,SAACC,GACvB,sBAAAC,EAAAhE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA6D,EAAO5B,GAAP,IAAAX,EAAA,OAAAxB,EAAAC,EAAAM,KAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cAAAsD,EAAAtD,KAAA,EACcd,EAAQ,CACrBiB,OAAQ,OACRD,IAAK,eACLQ,KAAMkC,KAAKC,UAAUM,KAJtB,QACCrC,EADDwC,EAAAR,MAMMC,MAKLtB,EAAS,CAACE,KAAM,QAASG,QAAShB,EAAKiC,MAAMA,SAJ7CvC,aAAawC,QAAQ,OAAQlC,EAAKe,QAClCrB,aAAawC,QAAQ,YAAalC,EAAKmC,WACvCxB,EAASG,EAAcd,EAAKyC,YAAYC,OATzC,wBAAAF,EAAAnC,SAAAkC,EAAAjC,SAAP,gBAAAqC,GAAA,OAAAL,EAAA9B,MAAAF,KAAAG,YAAA,IG/BSmC,EHEgB,WACzB,OAAO,SAACjC,GACgC,OAAjCjB,aAAaC,QAAQ,SAA0D,OAAtCD,aAAaC,QAAQ,cAC7DgB,EAASG,EAAapB,aAAaC,QAAQ,YGJ1Ce,EAASmC,EACTC,EH6Ca,SAAC/B,GACvB,sBAAAgC,EAAAzE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAsE,EAAOrC,GAAP,IAAAX,EAAA,OAAAxB,EAAAC,EAAAM,KAAA,SAAAkE,GAAA,cAAAA,EAAAhE,KAAAgE,EAAA/D,MAAA,cACHyB,EAAS,CAACE,KAAM,cAAeG,QAAQ,CAACkC,QAAS,mBAD9CD,EAAA/D,KAAA,EAEcd,EAAQ,CACrBiB,OAAQ,SACRD,IAAG,QAAAD,OAAU4B,GACbvB,WAAW,IALZ,QAECQ,EAFDiD,EAAAjB,MAOMC,MAILtB,EAAS,CAACE,KAAM,QAASG,QAAShB,EAAKiC,MAAMA,SAH7CtB,EAAUD,KACVC,EAAS,CAACE,KAAM,cAAeG,QAAS,qBATzC,wBAAAiC,EAAA5C,SAAA2C,EAAA1C,SAAP,gBAAA6C,GAAA,OAAAJ,EAAAvC,MAAAF,KAAAG,YAAA,IG5CS2C,ECXO,iBAAO,CAAEvC,KAAM,cDYtBwC,ECLc,SAACC,GAAD,MAAc,CACrCzC,KAAM,YACNG,QAAS,CACLuC,KAAM,eACNC,YAAaF,KDERG,ECXe,SAACC,GAAD,MAAY,CACpC7C,KAAM,gBACNG,QAAS,CAAE0C,QAASA,KDUXC,ECAa,SAACT,GAAD,MAAc,CACpCrC,KAAM,cACNG,QAASkC,IDDAU,ECGiB,iBAAO,CACjC/C,KAAM,oBDFGgD,EFVa,SAAC3C,EAAaH,GACpC,sBAAA1C,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAOgC,GAAP,IAAAX,EAAA,OAAAxB,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACcd,EAAQ,CACrBgB,IAAK,YAAc2B,EACnB1B,OAAQ,OACRO,KAAMkC,KAAKC,UAAUb,GACrB1B,WAAW,IALZ,QACCQ,EADDhB,EAAAgD,MAOMC,MAGLtB,EAAS,CAACE,KAAM,QAASG,QAAShB,EAAKiC,MAAMA,QAF7CtB,EAASM,EAAcjB,EAAKsD,QAAStD,EAAKmB,OAR3C,wBAAAnC,EAAAqB,SAAA1B,EAAA2B,SAAP,gBAAAC,GAAA,OAAAlC,EAAAmC,MAAAF,KAAAG,YAAA,IEUSqD,EFUgB,SAACzC,EAAIN,GAC9B,sBAAAuB,EAAAhE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA6D,EAAO5B,GAAP,IAAAX,EAAA,OAAAxB,EAAAC,EAAAM,KAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cACHyB,EAAS,CAACE,KAAM,cAAeG,QAAQ,CAACkC,QAAS,sBAD9CV,EAAAtD,KAAA,EAEcd,EAAQ,CACrBgB,IAAK,YAAc2B,EACnB1B,OAAQ,SACRO,KAAMkC,KAAKC,UAAU,CAACuB,QAASjC,IAC/B7B,WAAW,IANZ,QAECQ,EAFDwC,EAAAR,MAQMC,MAILtB,EAAS,CAACE,KAAM,QAASG,QAAShB,EAAKiC,MAAMA,SAH7CtB,EAAS,CAACE,KAAM,cAAeG,QAAQ,CAACkC,QAAS,MACjDvC,EAASS,EAAiBC,KAV3B,wBAAAmB,EAAAnC,SAAAkC,EAAAjC,SAAP,gBAAAqC,GAAA,OAAAL,EAAA9B,MAAAF,KAAAG,YAAA,IEVSsD,EFgCe,SAAChD,GACzB,sBAAAgC,EAAAzE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAsE,EAAOrC,GAAP,IAAAX,EAAAgE,EAAA,OAAAxF,EAAAC,EAAAM,KAAA,SAAAkE,GAAA,cAAAA,EAAAhE,KAAAgE,EAAA/D,MAAA,cAAA+D,EAAA/D,KAAA,EACcd,EAAQ,CACrBgB,IAAG,YAAAD,OAAc4B,GACjBvB,WAAW,IAHZ,OACCQ,EADDiD,EAAAjB,KAKCgC,EAAUhE,EAAKiE,SACfjE,EAAKiC,MAGLtB,EAAS,CAACE,KAAM,QAASG,QAAShB,EAAKiC,MAAMA,QAF7CtB,EAbyB,CACjCE,KAAM,gBACNG,QAAS,CAAEiD,SAWkBD,KAPtB,wBAAAf,EAAA5C,SAAA2C,EAAA1C,SAAP,gBAAA6C,GAAA,OAAAJ,EAAAvC,MAAAF,KAAAG,YAAA,IE/BSyD,EDdiB,SAAC3C,EAAiBR,GAC5C,sBAAA1C,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAC,EAAOgC,GAAP,IAAAX,EAAA,OAAAxB,EAAAC,EAAAM,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACcd,EAAQ,CACrBiB,OAAQ,OACRD,IAAG,gBAAAD,OAAkB4B,GACrBnB,KAAMkC,KAAKC,UAAUR,GACrB/B,WAAW,IALZ,QACCQ,EADDhB,EAAAgD,MAOMC,MAGLtB,EAAS,CAACE,KAAM,QAASG,QAAShB,EAAKiC,MAAMA,QAF7CtB,EAASW,EAAkBtB,EAAKmE,WARjC,wBAAAnF,EAAAqB,SAAA1B,EAAA2B,SAAP,gBAAAC,GAAA,OAAAlC,EAAAmC,MAAAF,KAAAG,YAAA,ICcS2D,EDOoB,SAAC3C,EAAWC,EAASX,GAClD,sBAAAuB,EAAAhE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAA6D,EAAO5B,GAAP,IAAAX,EAAA,OAAAxB,EAAAC,EAAAM,KAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cAAAsD,EAAAtD,KAAA,EACcd,EAAQ,CACrBiB,OAAQ,SACRD,IAAG,gBAAAD,OAAkB4B,GACrBnB,KAAMkC,KAAKC,UAAU,CAACN,YAAWC,YACjClC,WAAW,IALZ,QACCQ,EADDwC,EAAAR,MAOMC,MAGLtB,EAAS,CAACE,KAAM,QAASG,QAAShB,EAAKiC,MAAMA,QAF7CtB,EAASa,EAAqBC,EAAWC,IAR1C,wBAAAc,EAAAnC,SAAAkC,EAAAjC,SAAP,gBAAAqC,GAAA,OAAAL,EAAA9B,MAAAF,KAAAG,YAAA,ICPS4D,EDsBuB,SAAClD,GAAD,MAAW,CAC3CN,KAAM,yBACNG,QAASG,ICvBAmD,ED+BwB,SAACnD,EAAMJ,GACxC,sBAAAgC,EAAAzE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAO,SAAAsE,EAAOrC,GAAP,IAAAX,EAAA,OAAAxB,EAAAC,EAAAM,KAAA,SAAAkE,GAAA,cAAAA,EAAAhE,KAAAgE,EAAA/D,MAAA,cAAA+D,EAAA/D,KAAA,EACcd,EAAQ,CACrBiB,OAAQ,MACRD,IAAG,gBAAAD,OAAkB4B,GACrBnB,KAAMkC,KAAKC,UAAUZ,GACrB3B,WAAW,IALZ,QACCQ,EADDiD,EAAAjB,MAOMC,MAGLtB,EAAS,CAACE,KAAM,QAASG,QAAShB,EAAKiC,MAAMA,QAF7CtB,EAASgB,EAAyBR,IARnC,wBAAA8B,EAAA5C,SAAA2C,EAAA1C,SAAP,gBAAA6C,GAAA,OAAAJ,EAAAvC,MAAAF,KAAAG,YAAA,IGtDE8D,EAAQ,CACVC,MAAS,MACTC,OAAU,SACVC,QAAW,QACXC,aAAgB,kBAEdC,EAAQ,CACVC,cAAiB,OACjBC,MAAS,SAEPC,EAAS,CACXC,OAAU,iBACVC,OAAU,OACVT,MAAS,OACTU,aAAgB,MAChBC,UAAa,gBACbC,WAAa,MACbN,MAAS,OACTO,WAAc,OACdC,UAAa,QAYFC,EATC,SAACC,GACb,OACIC,EAAAhH,EAAAiH,cAAA,QAAMnB,MAAOA,EAAOoB,UAAU,UAC1BF,EAAAhH,EAAAiH,cAAA,KAAGnB,MAAOQ,GAAV,MACAU,EAAAhH,EAAAiH,cAAA,UAAQnB,MAAOK,GAAf,IAAyBY,EAAMI,MAA/B,OCtBNC,cAEF,SAAAA,IAAa,IAAAC,EAAA,OAAAxH,OAAAyH,EAAA,EAAAzH,CAAAgC,KAAAuF,IACTC,EAAAxH,OAAA0H,EAAA,EAAA1H,CAAAgC,KAAAhC,OAAA2H,EAAA,EAAA3H,CAAAuH,GAAAK,KAAA5F,QAMJ6F,WAAa,SAACC,GACVA,EAAEC,iBACFP,EAAKQ,SAAS,CAAEC,WAAYT,EAAKU,MAAMD,aAT9BT,EAYbW,aAAe,SAACL,GACZA,EAAEC,iBAEF,IAAIhE,EAAa,CACbqE,SAAUC,SAASC,eAAe,YAAYC,MAC9CC,SAAUH,SAASC,eAAe,YAAYC,OAG9CE,EAAY,GAEW,KAAxB1E,EAAWqE,WACVK,EAAa,6BAEU,KAAxB1E,EAAWyE,WACVC,EAAa,6BAIdjB,EAAKU,MAAMD,UACO,KAAdQ,EACCjB,EAAKN,MAAM5D,UAAUS,GAErByD,EAAKN,MAAM7B,WAAW,CAACT,QAAS6D,KAIpC1E,EAAW2E,WAAaL,SAASC,eAAe,cAAcC,MAE1DxE,EAAWyE,WAAazE,EAAW2E,WACnCD,EAAa,uBACP1E,EAAWyE,SAASG,OAAS,IACnCF,EAAY,gDAGC,KAAdA,EACCjB,EAAKN,MAAMpD,WAAWC,GAEtByD,EAAKN,MAAM7B,WAAW,CAACT,QAAS6D,MA/CxCjB,EAAKU,MAAS,CACVD,WAAW,GAHNT,mFAyDTxF,KAAKkF,MAAM5C,iDAGP,IAAAsE,EAAA5G,KACJ,OACImF,EAAAhH,EAAAiH,cAAA,WACID,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,eACZF,EAAAhH,EAAAiH,cAAA,SAAGD,EAAAhH,EAAAiH,cAAA,cAAQD,EAAAhH,EAAAiH,cAACyB,EAAD,CAASvB,MAAQtF,KAAKkG,MAAMD,UAAY,QAAU,aAA1D,MACHd,EAAAhH,EAAAiH,cAAA,SAAID,EAAAhH,EAAAiH,cAAA,cAAiC,KAAvBpF,KAAKkF,MAAMtC,SAAkB5C,KAAKkF,MAAMtC,UACtDuC,EAAAhH,EAAAiH,cAAA,QAAM0B,OAAO,IAAIC,SAAW,SAACjB,GAAKc,EAAKT,aAAaL,KAC/CX,EAAAhH,EAAAiH,cAAA,SAAO4B,QAAQ,YAAf,YACA7B,EAAAhH,EAAAiH,cAAA,SAAO7E,KAAK,OAAOQ,GAAG,aACtBoE,EAAAhH,EAAAiH,cAAA,SAAO4B,QAAQ,YAAf,YACA7B,EAAAhH,EAAAiH,cAAA,SAAO7E,KAAK,WAAWQ,GAAG,cACvBf,KAAKkG,MAAMD,WACVd,EAAAhH,EAAAiH,cAAA,YACID,EAAAhH,EAAAiH,cAAA,SAAO4B,QAAQ,cAAf,oBACA7B,EAAAhH,EAAAiH,cAAA,SAAO7E,KAAK,WAAWQ,GAAG,gBAGlCoE,EAAAhH,EAAAiH,cAAA,WAAMD,EAAAhH,EAAAiH,cAAA,WACND,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,UACTrF,KAAKkG,MAAMD,UACTd,EAAAhH,EAAAiH,cAAA,UAAQC,UAAU,OAAO4B,QAAU,SAACnB,GAAD,OAAOc,EAAKf,WAAWC,KAA1D,YACAX,EAAAhH,EAAAiH,cAAA,UAAQC,UAAU,OAAO4B,QAAU,SAACnB,GAAD,OAAOc,EAAKf,WAAWC,KAA1D,SACJX,EAAAhH,EAAAiH,cAAA,UAAQC,UAAU,SAAlB,WAEJF,EAAAhH,EAAAiH,cAAA,WAAMD,EAAAhH,EAAAiH,cAAA,qBAtFL8B,aA+GVC,cAPS,SAACjB,GACrB,MAAO,CACHtD,QAASsD,EAAMtD,QACfwE,KAAMlB,EAAMkB,OAZO,SAAC/G,GACxB,MAAM,CACFiB,UAAW,SAACC,GAAD,OAAclB,EAASiB,EAAUC,KAC5CO,WAAY,SAACP,GAAD,OAAclB,EAASyB,EAAWP,KAC9C8B,WAAY,SAACT,GAAD,OAAavC,EAASgD,EAAWT,KAC7CN,cAAe,kBAAMjC,EAASiC,QAWvB6E,CAA6C5B,GCrH/C8B,EAAY,SAACC,GACtB,GAAGC,MAAMD,KAAYA,EAChB,MAAQ,KAMb,IAHA,IAAIE,GADJF,EAASG,WAAWH,GAAQI,QAAQ,IAChBC,MAAM,KACtBC,EAAY,GACZC,EAAQ,EACJC,EAAEN,EAAO,GAAGb,OAAQ,EAAGmB,GAAG,EAAGA,IACjCF,GAAaJ,EAAO,GAAGM,GAEV,MADbD,GACwB,IAANC,GAA8B,MAAnBN,EAAO,GAAGM,EAAE,KACrCF,GAAa,IACbC,EAAQ,GAIhB,OADAP,EAASM,EAAUD,MAAM,IAAII,UAAUC,KAAK,IAAM,IAAMR,EAAO,GAC/D,IAAA3I,OAAWyI,ICXTW,mLACM,IAAAzC,EAAAxF,KACJ,OACImF,EAAAhH,EAAAiH,cAAA,OAAK6B,QAAU,kBAAMzB,EAAKN,MAAMnC,YAAYyC,EAAKN,MAAMlC,QAAQZ,MAAOiD,UAAU,YAC5EF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,YACXF,EAAAhH,EAAAiH,cAAA,SAAKpF,KAAKkF,MAAMlC,QAAQkF,MACxB/C,EAAAhH,EAAAiH,cAAA,KAAGC,UAAWrF,KAAKkF,MAAMlC,QAAQmF,QAAU,EAAI,WAAa,OAASd,EAAUrH,KAAKkF,MAAMlC,QAAQmF,SAAlG,MAEJhD,EAAAhH,EAAAiH,cAAA,SAAIpF,KAAKkF,MAAMlC,QAAQoF,cARblB,aAqBXC,cAHS,SAACjB,GACrB,MAAO,IALgB,SAAA7F,GAAQ,MAAK,CAChC0C,YAAc,SAAAC,GAAO,OAAI3C,EAAU0C,EAAYC,OAMxCmE,CAA6Cc,GCiB7CI,qBAxCX,SAAAA,EAAYnD,GAAM,IAAAM,EAAA,OAAAxH,OAAAyH,EAAA,EAAAzH,CAAAgC,KAAAqI,IACd7C,EAAAxH,OAAA0H,EAAA,EAAA1H,CAAAgC,KAAAhC,OAAA2H,EAAA,EAAA3H,CAAAqK,GAAAzC,KAAA5F,QAMJsI,MAAQC,YAAY,WAChB,IAAIC,EAAahD,EAAKU,MAAMtD,QAAU,IACnC4F,EAAW7B,OAASnB,EAAKN,MAAMtC,QAAQ+D,OAAS,IAC/C6B,EAAahD,EAAKN,MAAMtC,SAE5B4C,EAAKQ,SAAS,CAAEpD,QAAS4F,KAC1B,KAXChD,EAAKU,MAAS,CACVtD,QAAS,IAHC4C,mFAgBdxF,KAAKgG,SAAS,CACVpD,QAAS5C,KAAKkF,MAAMtC,yDAKxB6F,cAAczI,KAAKsI,wCAYnB,OACInD,EAAAhH,EAAAiH,cAAA,MAAInB,MARc,CAClBC,MAAS,OACTM,MAAS,QACTJ,QAAW,SACXsE,gBAAmB,UACnBC,UAAa,WAGc3I,KAAKkG,MAAMtD,gBArC/BsE,cCIb0B,cACF,SAAAA,IAAa,IAAApD,EAAA,OAAAxH,OAAAyH,EAAA,EAAAzH,CAAAgC,KAAA4I,IACTpD,EAAAxH,OAAA0H,EAAA,EAAA1H,CAAAgC,KAAAhC,OAAA2H,EAAA,EAAA3H,CAAA4K,GAAAhD,KAAA5F,QAOJwD,cAAgB,WACTgC,EAAKU,MAAM2C,iBACVrD,EAAKN,MAAM1B,cAAcgC,EAAKN,MAAMhC,YAAYd,IAAKoD,EAAKN,MAAMzE,QAEhE+E,EAAKQ,SAAS,CAAC6C,kBAAkB,KAZ5BrD,EAebhD,WAAa,WACNgD,EAAKU,MAAM4C,cACVtD,EAAKN,MAAM1C,WAAWgD,EAAKN,MAAMzE,QAEjC+E,EAAKQ,SAAS,CAAC8C,eAAe,KAjBlCtD,EAAKU,MAAQ,CACT2C,kBAAkB,EAClBC,eAAe,GAJVtD,wEAuBL,IAAAoB,EAAA5G,KAQJ,OACImF,EAAAhH,EAAAiH,cAAA,OAAKrE,GAAG,qBACJoE,EAAAhH,EAAAiH,cAAA,OAAKrE,GAAG,eACJoE,EAAAhH,EAAAiH,cAAA,UAAQC,UAAU,gBAAgB4B,QAAUjH,KAAKkF,MAAM5B,gBAAvD,WACA6B,EAAAhH,EAAAiH,cAAA,sBACAD,EAAAhH,EAAAiH,cAAA,cAAUpF,KAAKkF,MAAMhC,YAAYgF,MAAQ,eAAzC,KAEElI,KAAKkF,MAAMtC,SAAWuC,EAAAhH,EAAAiH,cAAC2D,EAAD,CAAMnG,QAAS5C,KAAKkF,MAAMtC,UAElDuC,EAAAhH,EAAAiH,cAAA,UAAQC,UAAU,WAAW4B,QAASjH,KAAKkF,MAAM9E,QAAjD,WAEEJ,KAAKkG,MAAM2C,kBAAoB1D,EAAAhH,EAAAiH,cAAA,0DAE/BpF,KAAKkF,MAAMhC,YAAYd,KAlBlB+C,EAAAhH,EAAAiH,cAAA,UAAQC,UAAU,MAAM4B,QAAUL,EAAKpD,eACxCoD,EAAKV,MAAM2C,iBAAmB,2BAA6B,kBAmBjE1D,EAAAhH,EAAAiH,cAAA,WAEEpF,KAAKkG,MAAM4C,eAAiB3D,EAAAhH,EAAAiH,cAAA,qFAC9BD,EAAAhH,EAAAiH,cAAA,UAAQC,UAAU,MAAM4B,QAAUjH,KAAKwC,YACjCxC,KAAKkG,MAAM4C,cAAgB,2BAA6B,wBAnD3D5B,aA8ERC,cAjBS,SAACjB,GACrB,MAAM,CACFhD,YAAagD,EAAMhD,YACnBzC,OAAQyF,EAAMkB,KACdnE,KAAMiD,EAAMjD,KACZL,QAASsD,EAAMtD,UAGI,SAACvC,GACxB,MAAM,CACFD,OAAQ,kBAAMC,EAASD,MACvBkD,eAAgB,kBAAMjD,EAASiD,MAC/BE,cAAe,SAACrC,EAAWV,GAAZ,OAAuBJ,EAASmD,EAAcrC,EAAWV,KACxE+B,WAAY,SAAC/B,GAAD,OAAYJ,EAASmC,EAAW/B,OAIrC0G,CAA6CyB,GC7EtDI,mLACM,IAAAC,EACkDjJ,KAAKkF,MAAtDvB,EADDsF,EACCtF,SAAUuF,EADXD,EACWC,UAAWC,EADtBF,EACsBE,SAAU7F,EADhC2F,EACgC3F,eAChC8F,EAAc,EACdC,EAAO1F,EAASgD,OAAS,EACzBhD,EAAS2F,IAAI,SAAAtG,GAET,OADAoG,GAA4B3B,WAAWzE,EAAQmF,SACvChD,EAAAhH,EAAAiH,cAACmE,EAAD,CAAavG,QAASA,EAASwG,IAAMxG,EAAQZ,QAEvD+C,EAAAhH,EAAAiH,cAAA,SAAGD,EAAAhH,EAAAiH,cAAA,6CAET,OACID,EAAAhH,EAAAiH,cAAA,WACM+D,GAAYhE,EAAAhH,EAAAiH,cAACqE,EAAD,MACdtE,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,eACXF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,UACXF,EAAAhH,EAAAiH,cAAA,oBAAaiC,EAAU+B,IACvBjE,EAAAhH,EAAAiH,cAAA,UAAQ6B,QAAU3D,GAAlB,aAEY,YAAd4F,EAA0B/D,EAAAhH,EAAAiH,cAAA,SAAGD,EAAAhH,EAAAiH,cAAA,6BAAkCiE,gDAOjD,YAAzBrJ,KAAKkF,MAAMgE,WAA0BlJ,KAAKkF,MAAMzB,aAAazD,KAAKkF,MAAMzE,eA1BvDyG,aA0CbC,eAPS,SAACjB,GAAD,MAAW,CAC/BvC,SAAUuC,EAAMvC,SAChBuF,UAAWhD,EAAMgD,UACjBzI,OAAQyF,EAAMkB,KACd+B,SAAUjD,EAAMiD,WATO,SAAA9I,GAAQ,MAAI,CAC/BoD,aAAc,SAAChD,GAAD,OAAYJ,EAASoD,EAAahD,KAChD6C,eAAgB,kBAAMjD,EAASiD,QAUxB6D,CAA6C6B,GC1B7CU,GApBS,SAACxE,GACrB,OACIA,EAAMyE,aAAaC,MAAM,GAAG7B,UAAUuB,IAAI,SAACzI,EAAMgJ,GAAP,OACtC1E,EAAAhH,EAAAiH,cAAA,OAAKoE,IAAKK,EAAO9I,GAAE,IAAAlC,OAAMgL,GAASxE,UAAU,WAAW4B,QAAS,kBAAM/B,EAAM4E,cAAN,IAAAjL,OAAwBgL,MAC1F1E,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,YACXF,EAAAhH,EAAAiH,cAAA,SAAKvE,EAAKkJ,MAAV,KACA5E,EAAAhH,EAAAiH,cAAA,KAAGC,UAAYxE,EAAKyG,QAAU,EAAI,MAAQ,YAAgBD,EAAUxG,EAAKyG,UAE7EnC,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,UACXF,EAAAhH,EAAAiH,cAAA,SAAIvE,EAAKmJ,MACT7E,EAAAhH,EAAAiH,cAAA,SAAqB,QAAjBvE,EAAKoJ,QAAoB,UAAY,gBAE7C9E,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,WACXF,EAAAhH,EAAAiH,cAAA,UAAQC,UAAU,QAAQ4B,QAAS,WAAM/B,EAAMnB,qBAAqBlD,KAApE,UACAsE,EAAAhH,EAAAiH,cAAA,UAAQC,UAAU,MAAM4B,QAAU,kBAAM/B,EAAMpB,kBAAkBoB,EAAM/D,UAAWN,EAAKuB,IAAK8C,EAAMzE,UAAjG,eCVdyJ,8MAEFJ,cAAgB,SAACK,GACb,IAAIC,EAAO/D,SAASC,eAAe6D,GAC/BE,EAAUhE,SAASiE,uBAAuB,QAC1CF,EAAKG,UAAUC,SAAS,QACxBH,EAAQ,GAAGE,UAAUE,OAAO,SAExBJ,EAAQ1D,OAAS,GACjB0D,EAAQ,GAAGE,UAAUE,OAAO,QAEhCL,EAAKG,UAAUG,IAAI,kFAInB,IAAAzB,EACgFjJ,KAAKkF,MAAnFpC,EADFmG,EACEnG,KAAMI,EADR+F,EACQ/F,YAAaa,EADrBkF,EACqBlF,qBAAsBT,EAD3C2F,EAC2C3F,eAAgB6F,EAD3DF,EAC2DE,SAAU1I,EADrEwI,EACqExI,OACnEyH,EAAsChF,EAAtCgF,KAAME,EAAgClF,EAAhCkF,KAAMD,EAA0BjF,EAA1BiF,QAASwB,EAAiBzG,EAAjByG,aAG3B,OACIxE,EAAAhH,EAAAiH,cAAA,WACM+D,GAAYhE,EAAAhH,EAAAiH,cAACqE,EAAD,MACdtE,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,eACXF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,UACXF,EAAAhH,EAAAiH,cAAA,UAAQ6B,QAAUnE,GAAlB,QACAqC,EAAAhH,EAAAiH,cAAA,UAAM8C,GACN/C,EAAAhH,EAAAiH,cAAA,UAAQ6B,QAAU3D,GAAlB,aAEJ6B,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,iBACXF,EAAAhH,EAAAiH,cAAA,SAAKgD,GACLjD,EAAAhH,EAAAiH,cAAA,SAAKiC,EAAUc,KAEnBhD,EAAAhH,EAAAiH,cAACuF,GAAD,CACIb,cAAe9J,KAAK8J,cACpB/F,qBAAsBA,EACtBD,kBAAmB9D,KAAKkF,MAAMpB,kBAC9BrD,OAAQA,EACRkJ,aAAcA,EACdxI,UAAW+B,EAAYd,eAvCrB8E,aA6DXC,eAdS,SAACjB,GAAD,MAAW,CAC/BhD,YAAcgD,EAAMhD,YACpBzC,OAAQyF,EAAMkB,KACd+B,SAAUjD,EAAMiD,WAEO,SAAC9I,GACxB,MAAO,CACHyD,kBAAmB,SAAC3C,EAAWC,EAASX,GAArB,OAAgCJ,EAASyD,EAAkB3C,EAAWC,EAASX,KAClGsD,qBAAsB,SAAClD,GAAD,OAAUR,EAAS0D,EAAqBlD,KAC9DiC,KAAM,kBAAMzC,EAASyC,MACrBQ,eAAgB,kBAAMjD,EAASiD,QAIxB6D,CAA6C+C,ICzD7CU,GATA,SAAC1F,GACZ,IAAIjC,EAAOiC,EAAMI,MACjB,OACIH,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,UACXF,EAAAhH,EAAAiH,cAAA,yBAAiBnC,cCSd4H,UAbU,kBACjB1F,EAAAhH,EAAAiH,cAAA,WACID,EAAAhH,EAAAiH,cAAA,SAAO4B,QAAQ,eAAf,gBACA7B,EAAAhH,EAAAiH,cAAA,SAAO7E,KAAK,OAAOQ,GAAG,cAAcmH,KAAK,cAAc7C,UAAU,UAEjEF,EAAAhH,EAAAiH,cAAA,SAAO4B,QAAQ,mBAAf,oBACA7B,EAAAhH,EAAAiH,cAAA,SAAO7E,KAAK,SAASQ,GAAG,kBAAkBmH,KAAK,kBAAkB7C,UAAU,QAAQyF,KAAK,QAExF3F,EAAAhH,EAAAiH,cAAA,SAAO4B,QAAQ,eAAf,eACA7B,EAAAhH,EAAAiH,cAAA,SAAO7E,KAAK,OAAOQ,GAAG,cAAcmH,KAAK,cAAc7C,UAAU,aCPvE0F,+LAGyC,KAAnC/K,KAAKkF,MAAM8F,sBACmC,OAA3ChL,KAAKkF,MAAM8F,oBAAoBf,SAAoBjK,KAAKkF,MAAM+F,aAAa,cAAc,GACjC,MAAvDjL,KAAKkF,MAAM8F,oBAAoB1D,OAAOK,MAAM,IAAI,IAAa3H,KAAKkF,MAAM+F,aAAa,cAAc,qCAIvG,IAEAC,EACAC,EACAC,EAJA5F,EAAAxF,KACAqL,EAASrL,KAAKkF,MAAM8F,oBAKxB,GAAc,KAAXK,EACCD,EAAc,kBAAOjG,EAAAhH,EAAAiH,cAAA,SAAO7E,KAAK,SAASQ,GAAG,SAASmH,KAAK,SAAS7C,UAAU,QAAQyF,KAAK,MAAMQ,aAAa,MAC9GJ,EAAgB,kBACZ/F,EAAAhH,EAAAiH,cAAA,YACID,EAAAhH,EAAAiH,cAAA,KAAGC,UAAU,mCAAmC4B,QAAS,SAACsE,GAAD,OAAW/F,EAAKN,MAAMsG,UAAUD,KAAzF,WACApG,EAAAhH,EAAAiH,cAAA,KAAGC,UAAU,qCAAqC4B,QAAS,SAACsE,GAAD,OAAW/F,EAAKN,MAAMsG,UAAUD,KAA3F,iBAGRJ,EAAgB,kBACZhG,EAAAhH,EAAAiH,cAAA,YACID,EAAAhH,EAAAiH,cAAA,KAAGC,UAAU,6BAA6B4B,QAAS,SAACsE,GAAD,OAAW/F,EAAKN,MAAMsG,UAAUD,KAAnF,WACApG,EAAAhH,EAAAiH,cAAA,KAAGC,UAAU,+BAA+B4B,QAAS,SAACsE,GAAD,OAAW/F,EAAKN,MAAMsG,UAAUD,KAArF,kBAGN,CACFF,EAAO/D,OAAS+D,EAAO/D,OAAOmE,WAC9BP,EAAgB,kBACZ/F,EAAAhH,EAAAiH,cAAA,YACID,EAAAhH,EAAAiH,cAAA,KAAGC,UAAS,6BAAAxG,OAAmD,QAAnBwM,EAAOpB,QAAqB,SAAW,IAAMhD,QAAS,SAACsE,GAAD,OAAW/F,EAAKN,MAAMsG,UAAUD,KAAlI,WACApG,EAAAhH,EAAAiH,cAAA,KAAGC,UAAS,sCAAAxG,OAA4D,OAAnBwM,EAAOpB,QAAoB,SAAW,IAAMhD,QAAS,SAACsE,GAAD,OAAW/F,EAAKN,MAAMsG,UAAUD,KAA1I,iBAIR,IAAIG,EAAOL,EAAO/D,OAAOK,MAAM,IAAI,GAE/BL,EAAkB,MAAToE,EAAeL,EAAO/D,OAAOK,MAAM,KAAK,GAAK0D,EAAO/D,OACjE6D,EAAgB,kBACZhG,EAAAhH,EAAAiH,cAAA,YACID,EAAAhH,EAAAiH,cAAA,KAAGC,UAAS,uBAAAxG,OAAmC,MAAT6M,EAAgB,SAAW,IAAMzE,QAAS,SAACsE,GAAD,OAAW/F,EAAKN,MAAMsG,UAAUD,KAAhH,WACApG,EAAAhH,EAAAiH,cAAA,KAAGC,UAAS,gCAAAxG,OAA4C,MAAT6M,EAAgB,SAAW,IAAMzE,QAAS,SAACsE,GAAD,OAAW/F,EAAKN,MAAMsG,UAAUD,KAAzH,eAGRH,EAAc,kBACVjG,EAAAhH,EAAAiH,cAAA,SAAO7E,KAAK,SAASQ,GAAG,SAASmH,KAAK,SAAS7C,UAAU,QAAQyF,KAAK,MAAMQ,aAAehE,KAGnG,OACQnC,EAAAhH,EAAAiH,cAAA,WACID,EAAAhH,EAAAiH,cAAA,SAAO4B,QAAQ,SAAf,SACA7B,EAAAhH,EAAAiH,cAAA,SAAO7E,KAAK,OAAOQ,GAAG,QAAQmH,KAAK,QAAQ7C,UAAU,QAAQiG,aAA2B,KAAXD,EAAiBA,EAAOtB,MAAQ,KAE3GoB,IAEFhG,EAAAhH,EAAAiH,cAAA,SAAO4B,QAAQ,QAAf,UACEoE,IAEFjG,EAAAhH,EAAAiH,cAAA,SAAO4B,QAAQ,QAAf,QACA7B,EAAAhH,EAAAiH,cAAA,SAAO7E,KAAK,OAAOQ,GAAG,OAAOmH,KAAK,OAAOoD,aAA0B,KAAXD,EAAiBA,EAAOrB,KClE3E,WACrB,IAAIA,EAAO,IAAI2B,KACf,SAAA9M,OAAUmL,EAAK4B,WAAa,EAA5B,KAAA/M,OAAiCmL,EAAK6B,UAAtC,KAAAhN,OAAoDmL,EAAK8B,eDgE8CC,KAErFb,YAhEchE,aA2ErBC,eAJS,SAACjB,GAAD,MAAY,CAC5B8E,oBAAqB9E,EAAM8E,sBAGpB7D,CAAyB4D,IExElCiB,eACF,SAAAA,EAAY9G,GAAM,IAAAM,EAAA,OAAAxH,OAAAyH,EAAA,EAAAzH,CAAAgC,KAAAgM,IACdxG,EAAAxH,OAAA0H,EAAA,EAAA1H,CAAAgC,KAAAhC,OAAA2H,EAAA,EAAA3H,CAAAgO,GAAApG,KAAA5F,QAMJmG,aAAe,SAACL,GAEZ,GADAA,EAAEC,iBACsB,iBAApBP,EAAKN,MAAMjC,KAAwB,CACnC,IAAIgJ,EAAU,CACV/D,KAAM7B,SAASC,eAAe,eAAeC,MAC7C4B,QAAS9B,SAASC,eAAe,mBAAmBC,MACpD6B,KAAM/B,SAASC,eAAe,eAAeC,OAEjDf,EAAKN,MAAM3B,WAAW0I,EAASzG,EAAKN,MAAMzE,QAC1C+E,EAAKN,MAAM/B,aAAaqC,EAAKN,MAAM9B,YAElC,CACD,IAAIkE,EAAqD,KAA5CjB,SAASC,eAAe,UAAUC,MAAe,EAAIkB,WAAWpB,SAASC,eAAe,UAAUC,OACjG,IAAXe,GAAiB9B,EAAKU,MAAMgG,aAAa5E,GAAgC,EAAtBG,WAAWH,IACjE,IAAIrG,EAAkB,CAClBkL,WAAY3G,EAAKN,MAAM/D,UACvBiL,eAAgB5G,EAAKN,MAAM8F,oBAAoB5I,KAAO,EACtDiK,YAAa,CACTtC,MAAO1D,SAASC,eAAe,SAASC,MACxCe,OAAQA,EACR0C,KAAM3D,SAASC,eAAe,QAAQC,MACtC0D,QAASzE,EAAKU,MAAMoG,WAAa,MAAQ,OAGV,KAAnC9G,EAAKN,MAAM8F,oBACXxF,EAAKN,MAAMtB,eAAe3C,EAAiBuE,EAAKN,MAAMzE,QAEtD+E,EAAKN,MAAMlB,sBAAsB/C,EAAiBuE,EAAKN,MAAMzE,QAIrE,IAAI,IAAIqH,EAAE,EAAGA,EAAGzB,SAASiE,uBAAuB,SAAS3D,OAAQmB,IAC7DzB,SAASiE,uBAAuB,SAASxC,GAAGvB,MAAQ,GAExDf,EAAKN,MAAM/B,aAAaqC,EAAKN,MAAM9B,SAzCrBoC,EA4ClByF,aAAe,SAACb,EAAMmC,GAClB/G,EAAKQ,SAALhI,OAAAwO,GAAA,EAAAxO,CAAA,GAAiBoM,EAAOmC,KA7CV/G,EAgDlBgG,UAAY,SAACD,GACT,IAAIkB,EAAiBlB,EAAMpB,OAAOI,UAAUC,SAAS,cAAiB,aAAe,aACjFkC,EAAYrG,SAASiE,uBAAuBmC,GAC5CE,GAAS,EACb,IAAIpB,EAAMpB,OAAOI,UAAUC,SAAS,UAAU,CAC1CmC,GAAS,EACT,IAAK,IAAI7E,EAAE,EAAGA,EAAE4E,EAAU/F,OAAQmB,IAAM4E,EAAU5E,GAAGyC,UAAUqC,OAAO,UAEvED,GACCnH,EAAKyF,aAAewB,GAAgBlB,EAAMpB,OAAOI,UAAUC,SAAS,cAvDxEhF,EAAKU,MAAQ,CACTgG,YAAY,EACZI,YAAY,GAJF9G,wEA6DV,IAQApC,EARAwD,EAAA5G,KACA6M,EAAc,GAmBlB,OAjBIA,EADmB,iBAApB7M,KAAKkF,MAAMjC,KACI,qBAEmC,KAAnCjD,KAAKkF,MAAM8F,oBAA6B,uBAAyB,qBAK/E5H,EADApD,KAAKkF,MAAM9B,OAEX+B,EAAAhH,EAAAiH,cAAA,QAAM0B,OAAO,IAAIC,SAAU/G,KAAKmG,cAC5BhB,EAAAhH,EAAAiH,cAAA,UAAMyH,GACgB,iBAApB7M,KAAKkF,MAAMjC,KAA0BkC,EAAAhH,EAAAiH,cAAC0H,GAAD,MAAuB3H,EAAAhH,EAAAiH,cAAC2H,GAAD,CAAuBvB,UAAWxL,KAAKwL,UAAWP,aAAcjL,KAAKiL,eACnI9F,EAAAhH,EAAAiH,cAAA,WAHJ,IAGWD,EAAAhH,EAAAiH,cAAA,WACPD,EAAAhH,EAAAiH,cAAA,yBAGKD,EAAAhH,EAAAiH,cAAA,4BAGTD,EAAAhH,EAAAiH,cAAA,OAAKC,UAAS,gBAAAxG,OAAmBmB,KAAKkF,MAAM9B,OAAS,SAAW,KAC5D+B,EAAAhH,EAAAiH,cAAA,UAAQrE,GAAG,eAAekG,QAAS,kBAAML,EAAK1B,MAAM/B,aAAayD,EAAK1B,MAAM9B,UAA5E,KACA+B,EAAAhH,EAAAiH,cAAA,WACKhC,WAtFA8D,aA0GNC,eAPS,SAACjB,GAAD,MAAY,CAC5BjD,KAAMiD,EAAMjD,KACZG,OAAQ8C,EAAM9C,OACdjC,UAAW+E,EAAMhD,YAAYd,IAC7B3B,OAAQyF,EAAMkB,KACd4D,oBAAqB9E,EAAM8E,sBAZR,SAAC3K,GAAD,MAAe,CAClC8C,aAAc,SAACC,GAAD,OAAY/C,EAAS8C,EAAaC,KAChDQ,eAAgB,SAAC3C,EAAiBR,GAAlB,OAA6BJ,EAASuD,EAAe3C,EAAiBR,KACtFuD,sBAAuB,SAAC/C,EAAiBR,GAAlB,OAA6BJ,EAAS2D,EAAsB/C,EAAiBR,KACpG8C,WAAY,SAAC3C,EAAaH,GAAd,OAAyBJ,EAASkD,EAAW3C,EAAaH,OAU/D0G,CAA6C6E,ICvGtDgB,oLAEF,IAAIC,EACJ,OAAOjN,KAAKkF,MAAMjC,MAChB,IAAK,eACHgK,EAAY9H,EAAAhH,EAAAiH,cAAC8H,GAAD,MACZ,MACF,IAAK,eACHD,EAAY9H,EAAAhH,EAAAiH,cAAC+H,GAAD,MACZ,MACF,QACEF,EAAY9H,EAAAhH,EAAAiH,cAACgI,EAAD,MAGhB,OACEjI,EAAAhH,EAAAiH,cAAA,WACED,EAAAhH,EAAAiH,cAACiI,GAAD,CAAQ/H,MAAOtF,KAAKkF,MAAMjC,OACxBgK,EACoB,WAApBjN,KAAKkF,MAAMjC,MAAqBkC,EAAAhH,EAAAiH,cAACkI,GAAD,cAlBxBpG,aA4BHC,eAJS,SAACjB,GAAD,MAAU,CAChCjD,KAAMiD,EAAMjD,OAGCkE,CAAyB6F,IC1BpBO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,gFCNSC,GAZM,CACjB3K,KAAM,SACNL,QAAS,GACTwE,KAAM,GACNlE,YAAa,GACb8H,oBAAqB,GACrB9B,UAAW,UACXvF,SAAU,GACVP,QAAQ,EACR+F,UAAU,GCyCC0E,GA3CM,WAAgC,IAA/B3H,EAA+B/F,UAAAwG,OAAA,QAAAmH,IAAA3N,UAAA,GAAAA,UAAA,GAAzByN,GAAc9G,EAAW3G,UAAAwG,OAAA,EAAAxG,UAAA,QAAA2N,EACjD,OAAQhH,EAAOvG,MACX,IAAK,QAGD,OAFyC,OAAtCnB,aAAaC,QAAQ,cAAwBD,aAAakB,WAAW,aACpC,OAAjClB,aAAaC,QAAQ,SAAmBD,aAAakB,WAAW,QAC5DtC,OAAA+P,GAAA,EAAA/P,CAAA,GAAI4P,GAAX,CAAyBhL,QAASkE,EAAOpG,UAC7C,IAAK,aACD,OCda,SAACwF,EAAOY,GAC7B,OAAO9I,OAAA+P,GAAA,EAAA/P,CAAA,GAAIkI,EAAX,CAAkBtD,QAAS,GAAIwE,KAAMN,EAAOpG,QAAQD,OAAQwC,KAAM,iBDanD+K,CAAsB9H,EAAOY,GACxC,IAAK,cACD,OAAO9I,OAAA+P,GAAA,EAAA/P,CAAA,GAAK4P,IAEhB,IAAK,gBACD,OEVgB,SAAC1H,EAAOY,GAChC,OAAO9I,OAAA+P,GAAA,EAAA/P,CAAA,GAAIkI,EAAX,CAAkBgD,UAAW,SAAUvF,SAAUmD,EAAOpG,QAAQiD,WFSjDsK,CAA4B/H,EAAOY,GAC9C,IAAK,cACD,OErBc,SAACZ,EAAOY,GAC9B,IAAIoH,EAAMlQ,OAAA+P,GAAA,EAAA/P,CAAA,GAAQ8I,EAAOpG,QAAQE,aAEjC,OADAsN,EAAOvE,aAAe,CAAC7C,EAAOpG,QAAQG,MAC/B7C,OAAOmQ,OAAPnQ,OAAA+P,GAAA,EAAA/P,CAAA,GAAkBkI,EAAlB,CAAyBvC,SAAS3F,OAAAoQ,GAAA,EAAApQ,CAAKkI,EAAMvC,UAAZ9E,OAAA,CAAsBqP,OFkB/CD,CAA0B/H,EAAOY,GAC5C,IAAK,iBACD,OElBiB,SAACZ,EAAOY,GACjC,IAAInD,EAAQ3F,OAAAoQ,GAAA,EAAApQ,CAAOkI,EAAMvC,UACzB,OAAO3F,OAAA+P,GAAA,EAAA/P,CAAA,GAAKkI,EAAZ,CAAmBvC,SAAUA,EAAS0K,OAAO,SAAAC,GAAG,OAAIA,EAAIlM,MAAQ0E,EAAOpG,QAAQK,KAAMqC,QAAQ,EAAOH,KAAM,eAAgBC,YAAa,KFgBxH+K,CAA6B/H,EAAOY,GAE/C,IAAK,kBACD,OG1BkB,SAACZ,EAAOY,GAClC,IAAI9D,EAAUhF,OAAOmQ,OAAO,GAAIjI,EAAMhD,aACtCF,EAAQmF,QAAWV,WAAWvB,EAAMhD,YAAYiF,SAAWV,WAAWX,EAAOpG,QAAQ4G,QACrFtE,EAAQ2G,aAAR3L,OAAAoQ,GAAA,EAAApQ,CAA2BkI,EAAMhD,YAAYyG,cAA7C9K,OAAA,CAA2DiI,EAAOpG,UAIlE,IAFA,IAAI6N,EAAWvQ,OAAAoQ,GAAA,EAAApQ,CAAOkI,EAAMvC,UAEpBmE,EAAE,EAAGA,EAAEyG,EAAY5H,OAAQmB,IAC/B,GAAGyG,EAAYzG,GAAG1F,MAAQY,EAAQZ,IAAI,CAClCmM,EAAYzG,GAAK9E,EACjB,MAGR,OAAOhF,OAAA+P,GAAA,EAAA/P,CAAA,GAAIkI,EAAX,CAAkBhD,YAAaF,EAASW,SAAS3F,OAAAoQ,GAAA,EAAApQ,CAAKuQ,KHavCC,CAA4BtI,EAAOY,GAC9C,IAAK,yBACD,OGsBwB,SAACZ,EAAOY,GACxC,OAAO9I,OAAA+P,GAAA,EAAA/P,CAAA,GAAIkI,EAAX,CAAkB9C,QAAQ,EAAM4H,oBAAqBhN,OAAOmQ,OAAO,GAAIrH,EAAOpG,WHvB/D8N,CAAkCtI,EAAOY,GACpD,IAAK,0BACD,OGdyB,SAACZ,EAAOY,GAGzC,IAFA,IACI2H,EADA9K,EAAQ3F,OAAAoQ,GAAA,EAAApQ,CAAOkI,EAAMvC,UAEhBmE,EAAE,EAAGA,EAAGnE,EAASgD,OAAQmB,IAC9B,GAAInE,EAASmE,GAAG1F,MAAQ0E,EAAOpG,QAAQyL,WAAY,CAC/CsC,EAAS3G,EACT,IAAI,IAAI4G,EAAE,EAAGA,EAAE/K,EAASmE,GAAG6B,aAAahD,OAAQ+H,IACzC/K,EAASmE,GAAG6B,aAAa+E,GAAGtM,MAAQ0E,EAAOpG,QAAQ0L,iBAClDzI,EAASmE,GAAGK,QAAYV,WAAW9D,EAASmE,GAAGK,SAAWV,WAAW9D,EAASmE,GAAG6B,aAAa+E,GAAGpH,QAAWG,WAAWX,EAAOpG,QAAQ2L,YAAY/E,QAClJ3D,EAASmE,GAAG6B,aAAa+E,GAAzB1Q,OAAA+P,GAAA,EAAA/P,CAAA,GAAkC8I,EAAOpG,QAAQ2L,YAAjD,CAA8DjK,IAAK0E,EAAOpG,QAAQ0L,kBAKlG,OAAOpO,OAAA+P,GAAA,EAAA/P,CAAA,GAAIkI,EAAX,CAAkB9C,QAAQ,EAAO4H,oBAAqB,GAAIrH,SAAS3F,OAAAoQ,GAAA,EAAApQ,CAAK2F,GAAWT,YAAalF,OAAOmQ,OAAO,GAAIxK,EAAS8K,MHA5GD,CAAmCtI,EAAOY,GACrD,IAAK,qBACD,OGCqB,SAACZ,EAAOY,GAGrC,IAFA,IACI2H,EADA9K,EAAQ3F,OAAAoQ,GAAA,EAAApQ,CAAOkI,EAAMvC,UAEhBmE,EAAE,EAAGA,EAAEnE,EAASgD,OAAQmB,IACzBnE,EAASmE,GAAG1F,MAAQ0E,EAAOpG,QAAQS,YACnCsN,EAAS3G,GAGjB,IAAI6G,EAAiBhL,EAAS8K,GAAQ9E,aAAa0E,OAAO,SAACO,GAAD,OAAQA,EAAGxM,MAAQ0E,EAAOpG,QAAQU,UAAU,GAAGkG,OAGzG,OAFA3D,EAAS8K,GAAQ9E,aAAehG,EAAS8K,GAAQ9E,aAAa0E,OAAO,SAACO,GAAD,OAAQA,EAAGxM,MAAQ0E,EAAOpG,QAAQU,UACvGuC,EAAS8K,GAAQtG,QAAUV,WAAWvB,EAAMhD,YAAYiF,SAAWV,WAAWkH,GACvE3Q,OAAA+P,GAAA,EAAA/P,CAAA,GACAkI,EADP,CAEIvC,SAAS3F,OAAAoQ,GAAA,EAAApQ,CAAK2F,GACdT,YAAYlF,OAAA+P,GAAA,EAAA/P,CAAA,GAAK2F,EAAS8K,MHfdD,CAA+BtI,EAAOY,GAElD,IAAK,kBACD,OItBkB,SAACZ,GAC3B,OAAOlI,OAAA+P,GAAA,EAAA/P,CAAA,GAAIkI,EAAX,CAAkBiD,UAAWjD,EAAMiD,WJqBpB0F,CAA2B3I,GACtC,IAAK,YACD,OIlCY,SAACA,EAAOY,GAC5B,IAAIgI,EAAW5I,EAAMvC,SAAS0K,OAAO,SAACrL,GAAD,OAAa8D,EAAOpG,QAAQwC,cAAgBF,EAAQZ,MACzF,OAAOpE,OAAA+P,GAAA,EAAA/P,CAAA,GAAIkI,EAAX,CAAkB9C,QAAQ,EAAOH,KAAM6D,EAAOpG,QAAQuC,KAAMC,YAAalF,OAAOmQ,OAAPnQ,OAAA+P,GAAA,EAAA/P,CAAA,GAAmB8Q,EAAS,OJgCtFD,CAAqB3I,EAAOY,GACvC,IAAK,YACD,OIhCY,SAACZ,EAAOY,GAC5B,OAAO9I,OAAA+P,GAAA,EAAA/P,CAAA,GAAIkI,EAAX,CAAkB9C,QAAQ,EAAOH,KAAM,eAAgBC,YAAa,KJ+BrD2L,CAAqB3I,GAChC,IAAK,cACD,OI/Bc,SAACA,EAAOY,GAC9B,OAAO9I,OAAA+P,GAAA,EAAA/P,CAAA,GAAIkI,EAAX,CAAkBtD,QAASkE,EAAOpG,QAAQkC,UJ8B3BiM,CAAuB3I,EAAOY,GACzC,IAAK,gBACD,OI3CgB,SAACZ,EAAOY,GAChC,OAAO9I,OAAA+P,GAAA,EAAA/P,CAAA,GAAIkI,EAAX,CAAkB9C,OAAQ0D,EAAOpG,QAAQ0C,OAAQ4H,oBAAqB,KJ0CvD6D,CAAyB3I,EAAOY,GAE3C,QACI,OAAOZ,sBKxCJ6I,GAFDC,aAAYnB,GAAcoB,aAAgBC,OCIxDC,IAASC,OAAOjK,EAAAhH,EAAAiH,cAACiK,EAAA,EAAD,CAAUN,MAAOA,IAAO5J,EAAAhH,EAAAiH,cAACkK,GAAD,OAAoBjJ,SAASC,eAAe,SRyH9E,kBAAmBiJ,WACrBA,UAAUC,cAAcC,MAAMhQ,KAAK,SAAAiQ,GACjCA,EAAaC","file":"static/js/main.0a72ae70.chunk.js","sourcesContent":["export const apiCall = async (callParams) =>{\r\n    let URL = `https://budget-backend-227103.appspot.com/${callParams.url && callParams.url}`; \r\n    let callFilter = {\r\n        method: callParams.method || \"GET\",\r\n        headers: {\"content-type\": \"application/json\"},\r\n    } \r\n    if(callParams.applyAuth){ callFilter.headers.Authorization = `Bearer: ${localStorage.getItem(\"authToken\")}`}\r\n    if(callParams.body){ callFilter.body = callParams.body };  \r\n    return fetch(URL, callFilter)\r\n    .then(data => data.json())\r\n    .then(data => data)\r\n    .catch(err => {  \r\n        return({ synced: 0 });\r\n    })\r\n}","import { apiCall } from '../helper/apiCall';  \r\n \r\nexport const logOut = () =>{ \r\n    return (dispatch) => {\r\n        localStorage.removeItem(\"authToken\");\r\n        localStorage.removeItem(\"user\");\r\n        dispatch({type: \"LOGOUT_USER\" });\r\n    };    \r\n};\r\nexport const checkLoggedIn = () =>{\r\n    return (dispatch) =>{\r\n        if(localStorage.getItem(\"user\") !== null && localStorage.getItem(\"authToken\") !== null){\r\n            dispatch(setLoginUser(localStorage.getItem(\"user\")));\r\n        };\r\n    }\r\n};\r\n\r\nconst setLoginUser = (userId) => { \r\n    return{ type: \"LOGIN_USER\", payload: {userId} }\r\n};\r\nexport const loginUser = (userInfo) => {  \r\n    return async (dispatch) =>{ \r\n        let data = await apiCall({ \r\n            method: \"POST\", \r\n            url: `user/login`,\r\n            body: JSON.stringify(userInfo)\r\n        }); \r\n        if(!data.error){\r\n            localStorage.setItem(\"user\", data.userId);\r\n            localStorage.setItem(\"authToken\", data.authToken);\r\n            dispatch(setLoginUser(data.userId))\r\n        }else{ \r\n            dispatch({type: \"ERROR\", payload: data.error.error })\r\n        }\r\n    }\r\n}\r\n\r\nexport const createUser = (createInfo) =>{\r\n    return async (dispatch) =>{\r\n        let data = await apiCall({ \r\n            method: \"POST\", \r\n            url: \"user/newuser\",\r\n            body: JSON.stringify(createInfo)\r\n        });\r\n        if(!data.error){\r\n            localStorage.setItem(\"user\", data.userId);\r\n            localStorage.setItem(\"authToken\", data.authToken);\r\n            dispatch(setLoginUser((data.userAccount._id)));\r\n        }else{\r\n            dispatch({type: \"ERROR\", payload: data.error.error })\r\n        }\r\n    }\r\n}\r\n \r\nexport const deleteUser = (userId) =>{\r\n    return async (dispatch) =>{\r\n        dispatch({type: \"SET_MESSAGE\", payload:{message: \"Deleting user\"}});\r\n        let data = await apiCall({\r\n            method: \"DELETE\", \r\n            url: `user/${userId}`,\r\n            applyAuth: true\r\n        });\r\n        if(!data.error){ \r\n            dispatch( logOut() );\r\n            dispatch({type: \"SET_MESSAGE\", payload: \"Account deleted\"});\r\n        }else{\r\n            dispatch({type: \"ERROR\", payload: data.error.error })\r\n        }\r\n    }\r\n}","import { apiCall } from '../helper/apiCall';  \r\n\r\nconst setAddAccount = (accountInfo, tran) => ({\r\n    type: \"ADD_ACCOUNT\", \r\n    payload: {accountInfo, tran}\r\n});\r\n\r\nexport const addAccount = (accountInfo, userId) => {  \r\n    return async (dispatch) =>{\r\n        let data = await apiCall({\r\n            url: \"accounts/\" + userId, \r\n            method: \"POST\",\r\n            body: JSON.stringify(accountInfo),\r\n            applyAuth: true\r\n        });\r\n        if(!data.error){ \r\n            dispatch(setAddAccount(data.account, data.tran));\r\n        }else{\r\n            dispatch({type: \"ERROR\", payload: data.error.error })\r\n        }\r\n    }\r\n} \r\n\r\nconst setDeleteAccount = (id) => ({\r\n    type: \"DELETE_ACCOUNT\",\r\n    payload: {id}\r\n});\r\n\r\nexport const deleteAccount = (id, userId) => { \r\n    return async (dispatch) =>{\r\n        dispatch({type: \"SET_MESSAGE\", payload:{message: \"Deleting account\"}});\r\n        let data = await apiCall({\r\n            url: \"accounts/\" + userId, \r\n            method: \"DELETE\",\r\n            body: JSON.stringify({account: id}),\r\n            applyAuth: true\r\n        });\r\n        if(!data.error){\r\n            dispatch({type: \"SET_MESSAGE\", payload:{message: \"\"}});\r\n            dispatch(setDeleteAccount(id));\r\n        }else{\r\n            dispatch({type: \"ERROR\", payload: data.error.error })\r\n        }\r\n    }\r\n}; \r\n\r\nconst setAccounts = (accountData) =>({\r\n    type: \"LOAD_ACCOUNTS\",\r\n    payload: { accounts: accountData } \r\n}); \r\n\r\nexport const loadAccounts = (userId) =>{  \r\n    return async (dispatch) => { \r\n        let data = await apiCall({\r\n            url: `accounts/${userId}`,\r\n            applyAuth: true\r\n        }); \r\n        let useData = data.accounts;  \r\n        if(!data.error){\r\n            dispatch(setAccounts(useData));\r\n        }else{\r\n            dispatch({type: \"ERROR\", payload: data.error.error });\r\n        } \r\n    } \r\n}","import { apiCall } from '../helper/apiCall';\r\n\r\nconst setAddTransaction = (transactionInfo) => ({\r\n    type: \"ADD_TRANSACTION\", \r\n    payload: transactionInfo\r\n});\r\n\r\nexport const addTransaction = (transactionInfo, userId) => {\r\n    return async (dispatch) =>{\r\n        let data = await apiCall({\r\n            method: \"POST\",\r\n            url: `transactions/${userId}`,\r\n            body: JSON.stringify(transactionInfo),\r\n            applyAuth: true\r\n        });\r\n        if(!data.error){\r\n            dispatch(setAddTransaction(data.newTrans));\r\n        }else{\r\n            dispatch({type: \"ERROR\", payload: data.error.error })\r\n        }\r\n        \r\n    }\r\n};\r\n\r\nconst setDeleteTransaction = (accountId, transId) => ({\r\n    type: \"DELETE_TRANSACTION\", \r\n    payload: { accountId, transId }\r\n});\r\n\r\nexport const deleteTransaction = (accountId, transId, userId) => {\r\n    return async (dispatch) =>{\r\n        let data = await apiCall({\r\n            method: \"DELETE\",\r\n            url: `transactions/${userId}`,\r\n            body: JSON.stringify({accountId, transId}),\r\n            applyAuth: true\r\n        });\r\n        if(!data.error){\r\n            dispatch(setDeleteTransaction(accountId, transId));\r\n        }else{\r\n            dispatch({type: \"ERROR\", payload: data.error.error })\r\n        }\r\n    }\r\n};\r\n \r\nexport const setUpdateTransaction = (tran) => ({\r\n    type: \"SET_UPDATE_TRANSACTION\", \r\n    payload: tran\r\n});\r\n\r\nconst setSendUpdateTransaction = (tran) => ({\r\n    type: \"SEND_UPDATE_TRANSACTION\", \r\n    payload: tran\r\n});\r\n \r\nexport const sendUpdateTransaction = (tran, userId) => { \r\n    return async (dispatch) =>{\r\n        let data = await apiCall({\r\n            method: \"PUT\",\r\n            url: `transactions/${userId}`,\r\n            body: JSON.stringify(tran),\r\n            applyAuth: true\r\n        });\r\n        if(!data.error){\r\n            dispatch(setSendUpdateTransaction(tran));\r\n        }else{\r\n            dispatch({type: \"ERROR\", payload: data.error.error })\r\n        }\r\n    }\r\n};","import * as userActions from './userActions';\r\nimport * as viewActions from './viewActions';\r\nimport * as accountActions from './accountActions';\r\nimport * as transactionActions from './transactionActions';\r\n\r\nexport const loginUser = userActions.loginUser;\r\nexport const createUser = userActions.createUser;\r\nexport const checkLoggedIn = userActions.checkLoggedIn;\r\nexport const logOut = userActions.logOut;\r\nexport const deleteUser = userActions.deleteUser;\r\n\r\nexport const back = viewActions.back;\r\nexport const viewAccount = viewActions.viewAccount;\r\nexport const toggleDrawer = viewActions.toggleDrawer;\r\nexport const setMessage = viewActions.setMessage;\r\nexport const toggleSettings = viewActions.toggleSettings;\r\n\r\nexport const addAccount = accountActions.addAccount;\r\nexport const deleteAccount = accountActions.deleteAccount;\r\nexport const loadAccounts = accountActions.loadAccounts;\r\n\r\nexport const addTransaction = transactionActions.addTransaction;\r\nexport const deleteTransaction = transactionActions.deleteTransaction;\r\nexport const setUpdateTransaction = transactionActions.setUpdateTransaction;\r\nexport const sendUpdateTransaction = transactionActions.sendUpdateTransaction;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export const back = () => ({ type: \"HOME_PAGE\" });\r\n\r\nexport const toggleDrawer = (drawer) =>({\r\n    type: \"TOGGLE_DRAWER\",\r\n    payload: { drawer: !drawer }\r\n});\r\n\r\nexport const viewAccount = (account) => ({\r\n    type: \"VIEW_PAGE\",\r\n    payload: {\r\n        page: \"View Account\",\r\n        accountView: account\r\n    } \r\n});\r\nexport const setMessage = (message) => ({\r\n    type: \"SET_MESSAGE\",\r\n    payload: message \r\n});\r\nexport const toggleSettings = () => ({ \r\n    type: \"TOGGLE_SETTINGS\" \r\n});","import React from 'react';\r\n\r\nconst style = {  \r\n    \"width\": \"90%\", \r\n    \"margin\": \"0 auto\",\r\n    \"padding\": \"5px 0\",\r\n    \"borderBottom\": \"1px solid gray\"\r\n}\r\nconst sStyle= {\r\n    \"paddingBottom\": \"25px\",\r\n    \"color\": \"green\"\r\n}\r\nconst iStyle = { \r\n    \"border\": \"2px solid blue\",\r\n    \"height\": \"35px\",\r\n    \"width\": \"44px\",\r\n    \"borderRadius\": \"50%\",\r\n    \"transform\": \"rotate(80deg)\", \r\n    \"paddingTop\":\"5px\",\r\n    \"color\": \"blue\",\r\n    \"marginLeft\": \"40px\",\r\n    \"marginTop\": \"20px\"\r\n}\r\n\r\nconst UserBar = (props)=>{\r\n    return(  \r\n        <span style={style} className=\"column\">\r\n            <i style={iStyle}>:)</i>\r\n            <strong style={sStyle}> {props.title} </strong>  \r\n        </span>\r\n    );\r\n}\r\n\r\nexport default UserBar;","import React, { Component } from 'react'; \r\nimport { connect } from 'react-redux'; \r\nimport { loginUser, createUser} from '../actions';\r\nimport UserBar from './fragments/ui/UserBar';\r\nimport { setMessage, checkLoggedIn } from '../actions'; \r\n\r\nclass ChooseUser extends Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = ({\r\n            loginForm: true\r\n        });\r\n    }\r\n\r\n    toggleForm = (e) =>{\r\n        e.preventDefault();\r\n        this.setState({ loginForm: !this.state.loginForm });\r\n    }\r\n\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        let createInfo = {\r\n            username: document.getElementById(\"username\").value,\r\n            password: document.getElementById(\"password\").value\r\n        }\r\n\r\n        let valErrors = \"\";\r\n\r\n        if(createInfo.username === \"\"){\r\n            valErrors =  \"Username can not be empty\";\r\n        } \r\n        if(createInfo.password === \"\"){\r\n            valErrors =  \"Password can not be empty\";\r\n        } \r\n\r\n \r\n        if(this.state.loginForm){\r\n            if(valErrors === \"\"){\r\n                this.props.loginUser(createInfo); \r\n            }else{\r\n                this.props.setMessage({message: valErrors});\r\n            }\r\n            \r\n        } else{ \r\n            createInfo.repassword = document.getElementById(\"rePassword\").value \r\n\r\n            if( createInfo.password !== createInfo.repassword){\r\n                valErrors =  \"Passwords must match\";\r\n            } else if(createInfo.password.length < 5){\r\n                valErrors = \"Password must be longer than four characters\";\r\n            } \r\n\r\n            if(valErrors === \"\"){\r\n                this.props.createUser(createInfo); \r\n            }else{\r\n                this.props.setMessage({message: valErrors});\r\n            } \r\n            \r\n        }\r\n       \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.checkLoggedIn();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className='displayList'>\r\n                   <p><strong><UserBar title={ this.state.loginForm ? \"Login\" : \"New user\"} /> </strong></p>\r\n                   <p ><strong>{ this.props.message !== \"\" && this.props.message }</strong></p>\r\n                   <form action=\"#\" onSubmit={ (e)=>{this.handleSubmit(e)} }>\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <input type='text' id=\"username\" />\r\n                        <label htmlFor=\"username\">Password</label>\r\n                        <input type='password' id=\"password\"/>\r\n                        { !this.state.loginForm && \r\n                            <span>\r\n                                <label htmlFor=\"rePassword\">Re-type password</label>\r\n                                <input type='password' id=\"rePassword\"/> \r\n                            </span>\r\n                        }\r\n                        <br /><br />\r\n                        <div className='column'>\r\n                            { this.state.loginForm ? \r\n                                <button className=\"blue\" onClick={ (e) => this.toggleForm(e) }>New user</button> : \r\n                                <button className=\"blue\" onClick={ (e) => this.toggleForm(e) }>Login</button> }\r\n                            <button className=\"green\">Submit</button>\r\n                        </div> \r\n                        <br /><br />\r\n                   </form> \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{ \r\n        loginUser: (userInfo) => dispatch(loginUser(userInfo)),\r\n        createUser: (userInfo) => dispatch(createUser(userInfo)),\r\n        setMessage: (message) => dispatch(setMessage(message)),\r\n        checkLoggedIn: () => dispatch(checkLoggedIn())\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return { \r\n        message: state.message,\r\n        user: state.user\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseUser);","export const convMoney = (amount) =>{\r\n    if(isNaN(amount) || !amount){\r\n         return (\"$0\");\r\n    }\r\n    amount = parseFloat(amount).toFixed(2); \r\n    let chunks = amount.split(\".\");\r\n    let newAmount = \"\";\r\n    let count = 0;\r\n    for(let i=chunks[0].length -1; i>-1; i--){\r\n        newAmount += chunks[0][i]; \r\n        count++;\r\n        if(count === 3 && i !== 0 && chunks[0][i-1] !== \"-\" ){\r\n            newAmount += \",\";\r\n            count = 0;\r\n        };\r\n    }  \r\n    amount = newAmount.split(\"\").reverse().join(\"\") + \".\" + chunks[1];\r\n    return `$${amount}`;\r\n}","import React, { Component } from 'react';\r\nimport { convMoney } from '../../helper/money';\r\nimport { connect } from 'react-redux';\r\nimport { viewAccount } from '../../actions';\r\n\r\n\r\nclass AccountCard extends Component{ \r\n    render(){  \r\n        return(\r\n            <div onClick={ () => this.props.viewAccount(this.props.account._id) } className=\"interact\" >\r\n                <div className=\"mainLine\">\r\n                    <p>{ this.props.account.name }</p>\r\n                    <p className={this.props.account.balance < 0 ? \"subtract\" : \"add\"}>{ convMoney(this.props.account.balance) } </p>\r\n                </div>\r\n                <p>{this.props.account.desc }</p>\r\n            </div>\r\n        );\r\n    } \r\n} \r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n        viewAccount:  account => dispatch( viewAccount(account) )\r\n    });\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AccountCard);","import React, {Component} from 'react';\r\n \r\nclass Load extends Component{\r\n\r\n    constructor(props){\r\n        super();\r\n        this.state = ({ \r\n            message: \"\"\r\n        });\r\n    }\r\n\r\n    timer = setInterval(()=>{\r\n        let newMessage = this.state.message + \".\";\r\n        if(newMessage.length > this.props.message.length + 6){\r\n            newMessage = this.props.message\r\n        }\r\n        this.setState({ message: newMessage}); \r\n    }, 700);\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            message: this.props.message\r\n        });   \r\n    }\r\n\r\n    componentWillUnmount(){\r\n        clearInterval(this.timer);\r\n    }\r\n    \r\n\r\n    render(){\r\n        const messageStyles = {\r\n            \"width\": \"100%\",\r\n            \"color\": \"black\",\r\n            \"padding\": \"10px 0\",\r\n            \"backgroundColor\": \"#c3c3c3\", \r\n            \"textAlign\": \"center\"\r\n        }\r\n        return(\r\n            <h3 style={messageStyles}>{this.state.message}</h3>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Load;","import React, { Component } from 'react';\r\nimport '../styles/settings.css';\r\nimport { connect } from 'react-redux';\r\nimport Load from '../components/fragments/ui/Load';\r\nimport { logOut, toggleSettings, deleteUser, deleteAccount } from '../actions';\r\n\r\nclass Settings extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            verifyDelAccount: false, \r\n            verifyDelUser: false        \r\n        }\r\n    }\r\n \r\n    deleteAccount = () => { \r\n        if(this.state.verifyDelAccount){ \r\n            this.props.deleteAccount(this.props.accountView._id, this.props.userId);\r\n        }else{\r\n            this.setState({verifyDelAccount: true});\r\n        } \r\n    }\r\n    deleteUser = () => { \r\n        if(this.state.verifyDelUser){ \r\n            this.props.deleteUser(this.props.userId);\r\n        }else{\r\n            this.setState({verifyDelUser: true});\r\n        } \r\n    }\r\n\r\n    render(){\r\n\r\n        const delAccountButton = () =>{\r\n                    return(<button className=\"red\" onClick={ this.deleteAccount }>\r\n                        { this.state.verifyDelAccount ? \"Yes, delete this account\" : \"Delete Account\"}\r\n                    </button>)\r\n        }\r\n\r\n        return(\r\n            <div id=\"settingsContainer\">\r\n                <div id=\"settingsBox\">\r\n                    <button className=\"red close_btn\" onClick={ this.props.toggleSettings } > Close </button>\r\n                    <h2>Settings</h2> \r\n                    <strong>{ this.props.accountView.name || \"User Account\"} </strong>\r\n\r\n                    { this.props.message && <Load message={this.props.message} />}\r\n\r\n                    <button className=\"btn blue\" onClick={this.props.logOut} >Log out</button>\r\n\r\n                    { this.state.verifyDelAccount && <p>Are you sure you want to delete this account?</p> }\r\n\r\n                    { this.props.accountView._id && delAccountButton() } \r\n\r\n                    <hr />\r\n\r\n                    { this.state.verifyDelUser && <p>Are you sure you want to delete this user and all accounts/transactions?</p> }\r\n                    <button className=\"red\" onClick={ this.deleteUser }>\r\n                        { this.state.verifyDelUser ? \"Yes, delete this account\" : \"Delete User\"}\r\n                    </button>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        accountView: state.accountView,\r\n        userId: state.user,\r\n        page: state.page, \r\n        message: state.message\r\n    };\r\n}\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        logOut: () => dispatch(logOut()),\r\n        toggleSettings: () => dispatch(toggleSettings()),\r\n        deleteAccount: (accountId, userId) => dispatch(deleteAccount(accountId, userId)),\r\n        deleteUser: (userId) => dispatch(deleteUser(userId))\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","import React, { Component } from 'react'; \r\nimport { connect } from 'react-redux';\r\nimport AccountCard from './fragments/AccountCard';\r\nimport Settings from './Settings';\r\nimport { loadAccounts, toggleSettings } from '../actions';\r\nimport { convMoney } from '../helper/money';\r\n\r\nclass ChooseAccount extends Component{\r\n    render(){ \r\n        let {accounts, loadState, settings, toggleSettings} = this.props; \r\n        let totalAmount = 0; \r\n        let list = accounts.length > 0 ? \r\n            accounts.map(account => {\r\n                totalAmount = totalAmount + parseFloat(account.balance);\r\n                return (<AccountCard account={account} key={ account._id } />)\r\n            }) \r\n            : <p><strong>Add a new account to begin</strong></p>;\r\n\r\n        return(\r\n            <div>\r\n                { settings && <Settings /> }\r\n                <div className='displayList'>\r\n                    <div className=\"column\"> \r\n                        <h2>Total: { convMoney(totalAmount) }</h2>\r\n                        <button onClick={ toggleSettings }>Settings</button>\r\n                    </div> \r\n                    { loadState === \"loading\" ? <p><strong>Loading...</strong></p> : list } \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.loadState === \"loading\"){ this.props.loadAccounts(this.props.userId); }\r\n    } \r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n        loadAccounts: (userId) => dispatch(loadAccounts(userId)), \r\n        toggleSettings: () => dispatch(toggleSettings())\r\n    });\r\n\r\nconst mapStateToProps = (state) =>({\r\n    accounts: state.accounts,\r\n    loadState: state.loadState,\r\n    userId: state.user, \r\n    settings: state.settings\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChooseAccount);","import React from 'react'; \r\nimport { convMoney } from '../../helper/money' \r\n\r\nconst TransactionList = (props) =>{ \r\n    return(\r\n        props.transactions.slice(0).reverse().map((tran, index)=> (\r\n            <div key={index} id={`t${index}`} className=\"interact\" onClick={() => props.toggleOptions(`t${index}`) }>\r\n                <div className=\"mainLine\">\r\n                    <p>{ tran.payee } </p>\r\n                    <p className={ tran.amount >= 0 ? \"add\" : \"subtract\" } >{ convMoney(tran.amount) }</p>\r\n                </div>\r\n                <div className=\"column\">\r\n                    <p>{tran.date}</p>\r\n                    <p>{tran.cleared === \"yes\" ? \"cleared\" : \"not cleared\"}</p>\r\n                </div>\r\n                <div className=\"options\">\r\n                    <button className=\"green\" onClick={()=>{ props.setUpdateTransaction(tran) }} >update</button>\r\n                    <button className=\"red\" onClick={ () => props.deleteTransaction(props.accountId, tran._id, props.userId) } >delete</button>\r\n                </div>\r\n            </div>\r\n        ))\r\n    );\r\n} \r\nexport default TransactionList; ","import React, { Component } from 'react';\r\nimport { convMoney } from '../helper/money'\r\nimport { connect } from 'react-redux';\r\nimport { deleteTransaction, setUpdateTransaction, back, toggleSettings } from '../actions';  \r\nimport Settings from './Settings';\r\nimport TransactionList from './fragments/TransactionList';\r\n \r\nclass ViewAccount extends Component { \r\n\r\n    toggleOptions = (target) =>{ \r\n        let targ = document.getElementById(target);\r\n        let oldTarg = document.getElementsByClassName(\"show\");\r\n        if( targ.classList.contains(\"show\")){\r\n            oldTarg[0].classList.remove(\"show\");\r\n        }else{\r\n            if( oldTarg.length > 0){\r\n                oldTarg[0].classList.remove(\"show\");\r\n            } \r\n            targ.classList.add(\"show\");\r\n        }\r\n    }\r\n    \r\n    render(){\r\n        let { back, accountView, setUpdateTransaction, toggleSettings, settings, userId } = this.props;\r\n        let { name, desc, balance, transactions } = accountView; \r\n\r\n\r\n        return(\r\n            <div>\r\n                { settings && <Settings /> }\r\n                <div className='displayList'>\r\n                    <div className=\"column\">\r\n                        <button onClick={ back }>Back</button>\r\n                        <h2>{ name }</h2>\r\n                        <button onClick={ toggleSettings } >Settings</button>\r\n                    </div>\r\n                    <div className='info centered'>\r\n                        <p>{ desc }</p>\r\n                        <p>{ convMoney(balance) }</p>\r\n                    </div> \r\n                    <TransactionList \r\n                        toggleOptions={this.toggleOptions} \r\n                        setUpdateTransaction={setUpdateTransaction} \r\n                        deleteTransaction={this.props.deleteTransaction}\r\n                        userId={userId}\r\n                        transactions={transactions} \r\n                        accountId={accountView._id} \r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n} \r\nconst mapStateToProps = (state) =>({\r\n    accountView : state.accountView,\r\n    userId: state.user,\r\n    settings: state.settings\r\n});\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return { \r\n        deleteTransaction: (accountId, transId, userId) => dispatch(deleteTransaction(accountId, transId, userId)), \r\n        setUpdateTransaction: (tran) => dispatch(setUpdateTransaction(tran)),\r\n        back: () => dispatch(back()),\r\n        toggleSettings: () => dispatch(toggleSettings())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewAccount);","import React from 'react';\r\n\r\nconst Header = (props) => {\r\n    let page = props.title;\r\n    return(\r\n        <div className='header'>\r\n            <h3>CheckBook - {page}</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst NewAccountFields = () => (\r\n        <div>\r\n            <label htmlFor='accountName'>Account name</label>\r\n            <input type='text' id='accountName' name='accountName' className=\"field\" /> \r\n\r\n            <label htmlFor='startingBalance'>Starting balance</label>\r\n            <input type='number' id='startingBalance' name='startingBalance' className=\"field\" step=\".01\"/>\r\n\r\n            <label htmlFor='description' >Description</label>\r\n            <input type='text' id='description' name='description' className=\"field\" />\r\n        </div>\r\n    );\r\n\r\nexport default NewAccountFields;","import React, {Component} from 'react';\r\nimport { todayDate } from '../../helper/date'; \r\nimport { connect } from 'react-redux'; \r\n \r\nclass NewTransactionsFields extends Component {  \r\n    \r\n    componentDidMount(){  \r\n        if( this.props.updatingTransaction !== \"\"){\r\n            if(this.props.updatingTransaction.cleared === \"no\") { this.props.changeSelVal(\"setCleared\", false); }\r\n            if( this.props.updatingTransaction.amount.split(\"\")[0] === \"-\"){ this.props.changeSelVal(\"setDeposit\", false) }\r\n        } \r\n    }\r\n\r\n    render(){  \r\n        let upTran = this.props.updatingTransaction; \r\n        let clearedFields;\r\n        let depositFields;\r\n        let amountField; \r\n\r\n        if(upTran === \"\"){ \r\n            amountField = () =>( <input type='number' id='amount' name='amount' className=\"field\" step=\".01\" defaultValue=\"\" /> );\r\n            clearedFields = () =>(\r\n                <span>\r\n                    <p className=\"f_choice setCleared field choice\" onClick={(event) => this.props.setChoice(event)}>Cleared</p>\r\n                    <p className=\"f_choice setCleared setFalse field\" onClick={(event) => this.props.setChoice(event)}>Not cleared</p>\r\n                </span>\r\n            );\r\n            depositFields = () =>( \r\n                <span>\r\n                    <p className=\"f_choice setDeposit choice\" onClick={(event) => this.props.setChoice(event)}>Deposit</p>\r\n                    <p className=\"f_choice setDeposit setFalse\" onClick={(event) => this.props.setChoice(event)}>withdraw</p>\r\n                </span>\r\n            );\r\n        } else{\r\n            upTran.amount = upTran.amount.toString();\r\n            clearedFields = () =>(\r\n                <span>\r\n                    <p className={`f_choice setCleared field ${ upTran.cleared === \"yes\"  ? \"choice\" : \"\"}`} onClick={(event) => this.props.setChoice(event)}>Cleared</p>\r\n                    <p className={`f_choice setCleared setFalse field ${ upTran.cleared === \"no\"  ? \"choice\" : \"\"}`} onClick={(event) => this.props.setChoice(event)}>Not cleared</p>\r\n                </span>\r\n            );            \r\n            \r\n            let sign = upTran.amount.split(\"\")[0];\r\n            \r\n            let amount = sign === \"-\" ? upTran.amount.split(\"-\")[1] : upTran.amount;\r\n            depositFields = () =>(\r\n                <span>\r\n                    <p className={`f_choice setDeposit ${ sign !== \"-\"  ? \"choice\" : \"\"}`} onClick={(event) => this.props.setChoice(event)}>Deposit</p>\r\n                    <p className={`f_choice setDeposit setFalse ${ sign === \"-\"  ? \"choice\" : \"\"}`} onClick={(event) => this.props.setChoice(event)}>withdrawl</p>\r\n                </span>\r\n            );\r\n            amountField = () =>(\r\n                <input type='number' id='amount' name='amount' className=\"field\" step=\".01\" defaultValue= {amount}/>\r\n            ); \r\n        }\r\n        return(\r\n                <div> \r\n                    <label htmlFor='payee'>Payee</label>\r\n                    <input type='text' id='payee' name='payee' className=\"field\" defaultValue= { upTran !== \"\"  ? upTran.payee : \"\"  }/> \r\n    \r\n                    { depositFields() }\r\n    \r\n                    <label htmlFor='date'>Amount</label>\r\n                    { amountField() }\r\n    \r\n                    <label htmlFor='date'>Date</label>\r\n                    <input type='text' id='date' name='date' defaultValue={ upTran !== \"\"  ? upTran.date : todayDate() } />\r\n        \r\n                    { clearedFields() }\r\n                </div>\r\n            );\r\n    }\r\n\r\n    };\r\n \r\nconst mapStateToProps = (state) => ({ \r\n        updatingTransaction: state.updatingTransaction\r\n    }); \r\n\r\nexport default connect(mapStateToProps)(NewTransactionsFields);","export const todayDate = () => {\r\n    let date = new Date();\r\n    return `${date.getMonth() + 1}-${date.getDate() }-${date.getFullYear()}`;\r\n}","import React, { Component } from 'react';\r\nimport '../styles/drawerStyles.css';\r\nimport { connect } from 'react-redux';\r\nimport NewAccountFields from './fragments/NewAccountFields';\r\nimport NewTransactionsFields from './fragments/NewTransactionsFields';\r\nimport { addAccount, addTransaction, sendUpdateTransaction, toggleDrawer } from '../actions';\r\n\r\nclass Drawer extends Component{ \r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            setDeposit: true,\r\n            setCleared: true\r\n        }\r\n    }  \r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if( this.props.page === \"All Accounts\"){\r\n            let accInfo = {\r\n                name: document.getElementById('accountName').value,\r\n                balance: document.getElementById(\"startingBalance\").value,\r\n                desc: document.getElementById(\"description\").value,\r\n            }\r\n            this.props.addAccount(accInfo, this.props.userId);\r\n            this.props.toggleDrawer(this.props.drawer);  \r\n            \r\n        }else{  \r\n            let amount = document.getElementById(\"amount\").value === \"\" ? 0 : parseFloat(document.getElementById(\"amount\").value);  \r\n            if(amount !== 0 && !this.state.setDeposit){ amount = (parseFloat(amount) * -1); }\r\n            let transactionInfo = {\r\n                account_id: this.props.accountId,\r\n                transaction_id: this.props.updatingTransaction._id || 0,\r\n                transaction: {\r\n                    payee: document.getElementById('payee').value,\r\n                    amount: amount,\r\n                    date: document.getElementById(\"date\").value,\r\n                    cleared: this.state.setCleared ? \"yes\" : \"no\"\r\n                }\r\n            };\r\n            if( this.props.updatingTransaction === \"\"){\r\n                this.props.addTransaction(transactionInfo, this.props.userId);\r\n            }else{\r\n                this.props.sendUpdateTransaction(transactionInfo, this.props.userId);\r\n            }\r\n           \r\n        }\r\n        for(let i=0; i< document.getElementsByClassName(\"field\").length; i++){ \r\n            document.getElementsByClassName(\"field\")[i].value = \"\";\r\n        }\r\n        this.props.toggleDrawer(this.props.drawer); \r\n        \r\n    } \r\n    changeSelVal = (targ, val) => { \r\n        this.setState({ [targ]: val });\r\n    }\r\n \r\n    setChoice = (event) =>{  \r\n        let selectionClass = event.target.classList.contains(\"setDeposit\") ?  \"setDeposit\" : \"setCleared\"; \r\n        let selection = document.getElementsByClassName(selectionClass);\r\n        let change = false;\r\n        if(!event.target.classList.contains(\"choice\")){\r\n            change = true;\r\n            for( let i=0; i<selection.length; i++){ selection[i].classList.toggle(\"choice\") } \r\n        };\r\n        if(change){ \r\n            this.changeSelVal(  selectionClass, event.target.classList.contains(\"setFalse\") ? false : true );\r\n        };  \r\n    }\r\n \r\n    render(){\r\n        let drawerTitle = \"\";\r\n        if(this.props.page === \"All Accounts\"){\r\n            drawerTitle = \"Adding new account\";\r\n        }else{\r\n            drawerTitle = this.props.updatingTransaction !== \"\" ? \"Updating transaction\" : \"Adding transaction\";\r\n        }\r\n        \r\n        let drawer;\r\n        if( this.props.drawer ){\r\n            drawer = \r\n            <form action=\"#\" onSubmit={this.handleSubmit}>\r\n                <h2>{ drawerTitle }</h2>  \r\n                { this.props.page === \"All Accounts\" ? <NewAccountFields /> : <NewTransactionsFields setChoice={this.setChoice} changeSelVal={this.changeSelVal} /> } \r\n                <br /> <br />\r\n                <button>Submit</button>\r\n            </form>\r\n        }else{\r\n            drawer = <p>Loading content</p>;\r\n        } \r\n        return(\r\n            <div className={`actionDrawer ${ this.props.drawer ? \"opened\" : \"\" }`}>\r\n                <button id=\"drawerToggle\" onClick={() => this.props.toggleDrawer(this.props.drawer) }>+</button>\r\n                <div>\r\n                    {drawer}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n} \r\nconst mapDispatchToProps = (dispatch) => ({\r\n        toggleDrawer: (drawer) => dispatch(toggleDrawer(drawer)),\r\n        addTransaction: (transactionInfo, userId) => dispatch(addTransaction(transactionInfo, userId)),\r\n        sendUpdateTransaction: (transactionInfo, userId) => dispatch(sendUpdateTransaction(transactionInfo, userId)),\r\n        addAccount: (accountInfo, userId) => dispatch(addAccount(accountInfo, userId))\r\n    });\r\n\r\nconst mapStateToProps = (state) => ({ \r\n        page: state.page, \r\n        drawer: state.drawer,\r\n        accountId: state.accountView._id,\r\n        userId: state.user,\r\n        updatingTransaction: state.updatingTransaction\r\n    });\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Drawer);","import React, { Component } from 'react'; \r\nimport './styles/App.css';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ChooseUser from './components/ChooseUser';\r\nimport ChooseAccount from './components/ChooseAccount';\r\nimport ViewAccount from './components/ViewAccount';\r\nimport Header from './components/Header';\r\nimport Drawer from './components/Drawer'; \r\n\r\nclass App extends Component { \r\n  render() {\r\n    let component;\r\n    switch(this.props.page){\r\n      case \"All Accounts\":\r\n        component = <ChooseAccount />\r\n        break;\r\n      case \"View Account\":\r\n        component = <ViewAccount />\r\n        break;\r\n      default: \r\n        component = <ChooseUser />\r\n        break;\r\n    }\r\n    return (\r\n      <div>\r\n        <Header title={this.props.page}/>\r\n        { component }\r\n        { this.props.page !== \"Log In\" && <Drawer /> } \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state)=>({ \r\n  page: state.page \r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const defaultState = {\r\n    page: \"Log In\",\r\n    message: \"\",\r\n    user: \"\",\r\n    accountView: {},\r\n    updatingTransaction: \"\",\r\n    loadState: \"loading\",\r\n    accounts: [],\r\n    drawer: false,\r\n    settings: false\r\n};\r\n\r\nexport default defaultState;","import * as transReducer from './reducerActions/transactions';\r\nimport * as accountReducer from './reducerActions/accounts';\r\nimport * as viewReducer from './reducerActions/views';\r\nimport * as userReducer from './reducerActions/user';\r\nimport defaultState from './defaultState';\r\n \r\n\r\nconst cBookreducer = (state=defaultState, action) => { \r\n    switch( action.type ){\r\n        case \"ERROR\":\r\n            if(localStorage.getItem(\"authToken\") !== null){ localStorage.removeItem(\"authToken\"); } ;\r\n            if(localStorage.getItem(\"user\") !== null){ localStorage.removeItem(\"user\"); } ;\r\n            return {...defaultState, message: action.payload }\r\n        case \"LOGIN_USER\":\r\n            return userReducer.loginUser(state, action);\r\n        case \"LOGOUT_USER\":\r\n            return { ...defaultState };  \r\n\r\n        case \"LOAD_ACCOUNTS\":  \r\n            return accountReducer.loadAccounts(state, action);\r\n        case \"ADD_ACCOUNT\":\r\n            return accountReducer.addAccount(state, action);\r\n        case \"DELETE_ACCOUNT\":   \r\n            return accountReducer.deleteAccount(state, action);\r\n\r\n        case \"ADD_TRANSACTION\":\r\n            return transReducer.addTransaction(state, action);\r\n        case \"SET_UPDATE_TRANSACTION\":\r\n            return transReducer.setUpdateTransaction(state, action);\r\n        case \"SEND_UPDATE_TRANSACTION\": \r\n            return transReducer.sendUpdateTransaction(state, action);\r\n        case \"DELETE_TRANSACTION\":\r\n            return  transReducer.deleteTransaction(state, action);\r\n\r\n        case \"TOGGLE_SETTINGS\": \r\n            return viewReducer.toggleSettings(state);\r\n        case \"VIEW_PAGE\": \r\n            return viewReducer.viewPage(state, action);\r\n        case \"HOME_PAGE\":  \r\n            return viewReducer.homePage(state, action);\r\n        case \"SET_MESSAGE\":\r\n            return viewReducer.setMessage(state, action);\r\n        case \"TOGGLE_DRAWER\": \r\n            return viewReducer.toggleDrawer(state, action);\r\n\r\n        default:\r\n            return state;\r\n    }\r\n} \r\n\r\nexport default cBookreducer;","export const loginUser = (state, action) => {\r\n    return {...state, message: \"\", user: action.payload.userId, page: \"All Accounts\" }; \r\n}\r\n","export const addAccount = (state, action) =>{\r\n    let newAcc = { ...action.payload.accountInfo }\r\n    newAcc.transactions = [action.payload.tran];  \r\n    return Object.assign({...state, accounts: [...state.accounts, newAcc ] });\r\n}\r\nexport const deleteAccount = (state, action) =>{\r\n    let accounts = [...state.accounts];\r\n    return { ...state, accounts: accounts.filter(acc => acc._id !== action.payload.id ), drawer: false, page: \"All Accounts\", accountView: {}};\r\n}\r\nexport const loadAccounts = (state, action) =>{\r\n    return {...state, loadState: \"loaded\", accounts: action.payload.accounts};\r\n}","export const addTransaction = (state, action) => {\r\n    let account = Object.assign({}, state.accountView);\r\n    account.balance = (parseFloat(state.accountView.balance) + parseFloat(action.payload.amount));\r\n    account.transactions = [...state.accountView.transactions, action.payload];\r\n    \r\n    let allAccounts = [...state.accounts]; \r\n\r\n    for(let i=0; i<allAccounts.length; i++){\r\n        if(allAccounts[i]._id === account._id){\r\n            allAccounts[i] = account;\r\n            break;\r\n        }\r\n    }\r\n    return {...state, accountView: account, accounts: [...allAccounts] };\r\n}\r\n\r\nexport const sendUpdateTransaction = (state, action) => {\r\n    let accounts = [...state.accounts];\r\n    let accNum;\r\n    for( let i=0; i< accounts.length; i++){ \r\n        if( accounts[i]._id === action.payload.account_id ){\r\n            accNum = i;\r\n            for(let j=0; j<accounts[i].transactions.length; j++){\r\n                if(accounts[i].transactions[j]._id === action.payload.transaction_id){\r\n                    accounts[i].balance =  (parseFloat(accounts[i].balance) - parseFloat(accounts[i].transactions[j].amount)) + parseFloat(action.payload.transaction.amount);\r\n                    accounts[i].transactions[j] = {...action.payload.transaction, _id: action.payload.transaction_id}\r\n                } \r\n            } \r\n        }\r\n    } \r\n    return {...state, drawer: false, updatingTransaction: \"\", accounts: [...accounts], accountView: Object.assign({}, accounts[accNum]) };\r\n}\r\n\r\nexport const deleteTransaction = (state, action) => {\r\n    let accounts = [...state.accounts];\r\n    let accNum;\r\n    for( let i=0; i<accounts.length; i++){\r\n        if( accounts[i]._id === action.payload.accountId ){\r\n            accNum = i;\r\n        }\r\n    } \r\n    let subtractAmount = accounts[accNum].transactions.filter((ac) => ac._id === action.payload.transId )[0].amount; \r\n    accounts[accNum].transactions = accounts[accNum].transactions.filter((ac) => ac._id !== action.payload.transId ); \r\n    accounts[accNum].balance = parseFloat(state.accountView.balance) - parseFloat(subtractAmount);\r\n    return {    \r\n        ...state,\r\n        accounts: [...accounts], \r\n        accountView: {...accounts[accNum]} \r\n    };\r\n}\r\nexport const setUpdateTransaction = (state, action) =>{\r\n    return {...state, drawer: true, updatingTransaction: Object.assign({}, action.payload) };\r\n}","export const toggleDrawer = (state, action) =>{\r\n    return {...state, drawer: action.payload.drawer, updatingTransaction: \"\"}; \r\n}\r\nexport const viewPage = (state, action) =>{\r\n    let vAccount = state.accounts.filter((account) => action.payload.accountView === account._id );\r\n    return {...state, drawer: false, page: action.payload.page, accountView: Object.assign({ ...vAccount[0] }) };\r\n}\r\nexport const homePage = (state, action) =>{\r\n    return {...state, drawer: false, page: \"All Accounts\", accountView: {}};\r\n}\r\nexport const setMessage = (state, action) =>{\r\n    return {...state, message: action.payload.message}\r\n}\r\nexport const toggleSettings = (state) =>{\r\n    return {...state, settings: !state.settings }\r\n}","import cBookreducer from './cBookReducer'; \r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n  \r\nconst store = createStore(cBookreducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './reducers/';\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}